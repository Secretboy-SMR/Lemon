// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SceneTeamAvatar.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Lemonade.Net.Protocol {

  /// <summary>Holder for reflection information generated from SceneTeamAvatar.proto</summary>
  public static partial class SceneTeamAvatarReflection {

    #region Descriptor
    /// <summary>File descriptor for SceneTeamAvatar.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SceneTeamAvatarReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVTY2VuZVRlYW1BdmF0YXIucHJvdG8aEEF2YXRhckluZm8ucHJvdG8aFVNj",
            "ZW5lQXZhdGFySW5mby5wcm90bxoaQWJpbGl0eVN5bmNTdGF0ZUluZm8ucHJv",
            "dG8aFVNjZW5lRW50aXR5SW5mby5wcm90bxoZQWJpbGl0eUNvbnRyb2xCbG9j",
            "ay5wcm90bxoQU2VydmVyQnVmZi5wcm90byKXBAoPU2NlbmVUZWFtQXZhdGFy",
            "EhIKCnBsYXllcl91aWQYASABKA0SEwoLYXZhdGFyX2d1aWQYAiABKAQSEAoI",
            "c2NlbmVfaWQYAyABKA0SEQoJZW50aXR5X2lkGAQgASgNEiAKC2F2YXRhcl9p",
            "bmZvGAUgASgLMgsuQXZhdGFySW5mbxIrChFzY2VuZV9hdmF0YXJfaW5mbxgG",
            "IAEoCzIQLlNjZW5lQXZhdGFySW5mbxIyChNhdmF0YXJfYWJpbGl0eV9pbmZv",
            "GAcgASgLMhUuQWJpbGl0eVN5bmNTdGF0ZUluZm8SJQoQc2VydmVyX2J1ZmZf",
            "bGlzdBgIIAMoCzILLlNlcnZlckJ1ZmYSKwoRc2NlbmVfZW50aXR5X2luZm8Y",
            "CSABKAsyEC5TY2VuZUVudGl0eUluZm8SEwoLd2VhcG9uX2d1aWQYCiABKAQS",
            "GAoQd2VhcG9uX2VudGl0eV9pZBgLIAEoDRIyChN3ZWFwb25fYWJpbGl0eV9p",
            "bmZvGAwgASgLMhUuQWJpbGl0eVN5bmNTdGF0ZUluZm8SMwoVYWJpbGl0eV9j",
            "b250cm9sX2Jsb2NrGA0gASgLMhQuQWJpbGl0eUNvbnRyb2xCbG9jaxIUCgxp",
            "c19yZWNvbm5lY3QYDiABKAgSHAoUaXNfcGxheWVyX2N1cl9hdmF0YXIYDyAB",
            "KAgSEwoLaXNfb25fc2NlbmUYECABKAhCGKoCFUxlbW9uYWRlLk5ldC5Qcm90",
            "b2NvbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Lemonade.Net.Protocol.AvatarInfoReflection.Descriptor, global::Lemonade.Net.Protocol.SceneAvatarInfoReflection.Descriptor, global::Lemonade.Net.Protocol.AbilitySyncStateInfoReflection.Descriptor, global::Lemonade.Net.Protocol.SceneEntityInfoReflection.Descriptor, global::Lemonade.Net.Protocol.AbilityControlBlockReflection.Descriptor, global::Lemonade.Net.Protocol.ServerBuffReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Lemonade.Net.Protocol.SceneTeamAvatar), global::Lemonade.Net.Protocol.SceneTeamAvatar.Parser, new[]{ "PlayerUid", "AvatarGuid", "SceneId", "EntityId", "AvatarInfo", "SceneAvatarInfo", "AvatarAbilityInfo", "ServerBuffList", "SceneEntityInfo", "WeaponGuid", "WeaponEntityId", "WeaponAbilityInfo", "AbilityControlBlock", "IsReconnect", "IsPlayerCurAvatar", "IsOnScene" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SceneTeamAvatar : pb::IMessage<SceneTeamAvatar>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SceneTeamAvatar> _parser = new pb::MessageParser<SceneTeamAvatar>(() => new SceneTeamAvatar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SceneTeamAvatar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Lemonade.Net.Protocol.SceneTeamAvatarReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SceneTeamAvatar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SceneTeamAvatar(SceneTeamAvatar other) : this() {
      playerUid_ = other.playerUid_;
      avatarGuid_ = other.avatarGuid_;
      sceneId_ = other.sceneId_;
      entityId_ = other.entityId_;
      avatarInfo_ = other.avatarInfo_ != null ? other.avatarInfo_.Clone() : null;
      sceneAvatarInfo_ = other.sceneAvatarInfo_ != null ? other.sceneAvatarInfo_.Clone() : null;
      avatarAbilityInfo_ = other.avatarAbilityInfo_ != null ? other.avatarAbilityInfo_.Clone() : null;
      serverBuffList_ = other.serverBuffList_.Clone();
      sceneEntityInfo_ = other.sceneEntityInfo_ != null ? other.sceneEntityInfo_.Clone() : null;
      weaponGuid_ = other.weaponGuid_;
      weaponEntityId_ = other.weaponEntityId_;
      weaponAbilityInfo_ = other.weaponAbilityInfo_ != null ? other.weaponAbilityInfo_.Clone() : null;
      abilityControlBlock_ = other.abilityControlBlock_ != null ? other.abilityControlBlock_.Clone() : null;
      isReconnect_ = other.isReconnect_;
      isPlayerCurAvatar_ = other.isPlayerCurAvatar_;
      isOnScene_ = other.isOnScene_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SceneTeamAvatar Clone() {
      return new SceneTeamAvatar(this);
    }

    /// <summary>Field number for the "player_uid" field.</summary>
    public const int PlayerUidFieldNumber = 1;
    private uint playerUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlayerUid {
      get { return playerUid_; }
      set {
        playerUid_ = value;
      }
    }

    /// <summary>Field number for the "avatar_guid" field.</summary>
    public const int AvatarGuidFieldNumber = 2;
    private ulong avatarGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong AvatarGuid {
      get { return avatarGuid_; }
      set {
        avatarGuid_ = value;
      }
    }

    /// <summary>Field number for the "scene_id" field.</summary>
    public const int SceneIdFieldNumber = 3;
    private uint sceneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 4;
    private uint entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }

    /// <summary>Field number for the "avatar_info" field.</summary>
    public const int AvatarInfoFieldNumber = 5;
    private global::Lemonade.Net.Protocol.AvatarInfo avatarInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.AvatarInfo AvatarInfo {
      get { return avatarInfo_; }
      set {
        avatarInfo_ = value;
      }
    }

    /// <summary>Field number for the "scene_avatar_info" field.</summary>
    public const int SceneAvatarInfoFieldNumber = 6;
    private global::Lemonade.Net.Protocol.SceneAvatarInfo sceneAvatarInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.SceneAvatarInfo SceneAvatarInfo {
      get { return sceneAvatarInfo_; }
      set {
        sceneAvatarInfo_ = value;
      }
    }

    /// <summary>Field number for the "avatar_ability_info" field.</summary>
    public const int AvatarAbilityInfoFieldNumber = 7;
    private global::Lemonade.Net.Protocol.AbilitySyncStateInfo avatarAbilityInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.AbilitySyncStateInfo AvatarAbilityInfo {
      get { return avatarAbilityInfo_; }
      set {
        avatarAbilityInfo_ = value;
      }
    }

    /// <summary>Field number for the "server_buff_list" field.</summary>
    public const int ServerBuffListFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Lemonade.Net.Protocol.ServerBuff> _repeated_serverBuffList_codec
        = pb::FieldCodec.ForMessage(66, global::Lemonade.Net.Protocol.ServerBuff.Parser);
    private readonly pbc::RepeatedField<global::Lemonade.Net.Protocol.ServerBuff> serverBuffList_ = new pbc::RepeatedField<global::Lemonade.Net.Protocol.ServerBuff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Lemonade.Net.Protocol.ServerBuff> ServerBuffList {
      get { return serverBuffList_; }
    }

    /// <summary>Field number for the "scene_entity_info" field.</summary>
    public const int SceneEntityInfoFieldNumber = 9;
    private global::Lemonade.Net.Protocol.SceneEntityInfo sceneEntityInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.SceneEntityInfo SceneEntityInfo {
      get { return sceneEntityInfo_; }
      set {
        sceneEntityInfo_ = value;
      }
    }

    /// <summary>Field number for the "weapon_guid" field.</summary>
    public const int WeaponGuidFieldNumber = 10;
    private ulong weaponGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong WeaponGuid {
      get { return weaponGuid_; }
      set {
        weaponGuid_ = value;
      }
    }

    /// <summary>Field number for the "weapon_entity_id" field.</summary>
    public const int WeaponEntityIdFieldNumber = 11;
    private uint weaponEntityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WeaponEntityId {
      get { return weaponEntityId_; }
      set {
        weaponEntityId_ = value;
      }
    }

    /// <summary>Field number for the "weapon_ability_info" field.</summary>
    public const int WeaponAbilityInfoFieldNumber = 12;
    private global::Lemonade.Net.Protocol.AbilitySyncStateInfo weaponAbilityInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.AbilitySyncStateInfo WeaponAbilityInfo {
      get { return weaponAbilityInfo_; }
      set {
        weaponAbilityInfo_ = value;
      }
    }

    /// <summary>Field number for the "ability_control_block" field.</summary>
    public const int AbilityControlBlockFieldNumber = 13;
    private global::Lemonade.Net.Protocol.AbilityControlBlock abilityControlBlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.AbilityControlBlock AbilityControlBlock {
      get { return abilityControlBlock_; }
      set {
        abilityControlBlock_ = value;
      }
    }

    /// <summary>Field number for the "is_reconnect" field.</summary>
    public const int IsReconnectFieldNumber = 14;
    private bool isReconnect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsReconnect {
      get { return isReconnect_; }
      set {
        isReconnect_ = value;
      }
    }

    /// <summary>Field number for the "is_player_cur_avatar" field.</summary>
    public const int IsPlayerCurAvatarFieldNumber = 15;
    private bool isPlayerCurAvatar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPlayerCurAvatar {
      get { return isPlayerCurAvatar_; }
      set {
        isPlayerCurAvatar_ = value;
      }
    }

    /// <summary>Field number for the "is_on_scene" field.</summary>
    public const int IsOnSceneFieldNumber = 16;
    private bool isOnScene_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsOnScene {
      get { return isOnScene_; }
      set {
        isOnScene_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SceneTeamAvatar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SceneTeamAvatar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerUid != other.PlayerUid) return false;
      if (AvatarGuid != other.AvatarGuid) return false;
      if (SceneId != other.SceneId) return false;
      if (EntityId != other.EntityId) return false;
      if (!object.Equals(AvatarInfo, other.AvatarInfo)) return false;
      if (!object.Equals(SceneAvatarInfo, other.SceneAvatarInfo)) return false;
      if (!object.Equals(AvatarAbilityInfo, other.AvatarAbilityInfo)) return false;
      if(!serverBuffList_.Equals(other.serverBuffList_)) return false;
      if (!object.Equals(SceneEntityInfo, other.SceneEntityInfo)) return false;
      if (WeaponGuid != other.WeaponGuid) return false;
      if (WeaponEntityId != other.WeaponEntityId) return false;
      if (!object.Equals(WeaponAbilityInfo, other.WeaponAbilityInfo)) return false;
      if (!object.Equals(AbilityControlBlock, other.AbilityControlBlock)) return false;
      if (IsReconnect != other.IsReconnect) return false;
      if (IsPlayerCurAvatar != other.IsPlayerCurAvatar) return false;
      if (IsOnScene != other.IsOnScene) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerUid != 0) hash ^= PlayerUid.GetHashCode();
      if (AvatarGuid != 0UL) hash ^= AvatarGuid.GetHashCode();
      if (SceneId != 0) hash ^= SceneId.GetHashCode();
      if (EntityId != 0) hash ^= EntityId.GetHashCode();
      if (avatarInfo_ != null) hash ^= AvatarInfo.GetHashCode();
      if (sceneAvatarInfo_ != null) hash ^= SceneAvatarInfo.GetHashCode();
      if (avatarAbilityInfo_ != null) hash ^= AvatarAbilityInfo.GetHashCode();
      hash ^= serverBuffList_.GetHashCode();
      if (sceneEntityInfo_ != null) hash ^= SceneEntityInfo.GetHashCode();
      if (WeaponGuid != 0UL) hash ^= WeaponGuid.GetHashCode();
      if (WeaponEntityId != 0) hash ^= WeaponEntityId.GetHashCode();
      if (weaponAbilityInfo_ != null) hash ^= WeaponAbilityInfo.GetHashCode();
      if (abilityControlBlock_ != null) hash ^= AbilityControlBlock.GetHashCode();
      if (IsReconnect != false) hash ^= IsReconnect.GetHashCode();
      if (IsPlayerCurAvatar != false) hash ^= IsPlayerCurAvatar.GetHashCode();
      if (IsOnScene != false) hash ^= IsOnScene.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerUid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(PlayerUid);
      }
      if (AvatarGuid != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(AvatarGuid);
      }
      if (SceneId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SceneId);
      }
      if (EntityId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(EntityId);
      }
      if (avatarInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(AvatarInfo);
      }
      if (sceneAvatarInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SceneAvatarInfo);
      }
      if (avatarAbilityInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AvatarAbilityInfo);
      }
      serverBuffList_.WriteTo(output, _repeated_serverBuffList_codec);
      if (sceneEntityInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(SceneEntityInfo);
      }
      if (WeaponGuid != 0UL) {
        output.WriteRawTag(80);
        output.WriteUInt64(WeaponGuid);
      }
      if (WeaponEntityId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(WeaponEntityId);
      }
      if (weaponAbilityInfo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(WeaponAbilityInfo);
      }
      if (abilityControlBlock_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(AbilityControlBlock);
      }
      if (IsReconnect != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsReconnect);
      }
      if (IsPlayerCurAvatar != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsPlayerCurAvatar);
      }
      if (IsOnScene != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IsOnScene);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerUid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(PlayerUid);
      }
      if (AvatarGuid != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(AvatarGuid);
      }
      if (SceneId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SceneId);
      }
      if (EntityId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(EntityId);
      }
      if (avatarInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(AvatarInfo);
      }
      if (sceneAvatarInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SceneAvatarInfo);
      }
      if (avatarAbilityInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AvatarAbilityInfo);
      }
      serverBuffList_.WriteTo(ref output, _repeated_serverBuffList_codec);
      if (sceneEntityInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(SceneEntityInfo);
      }
      if (WeaponGuid != 0UL) {
        output.WriteRawTag(80);
        output.WriteUInt64(WeaponGuid);
      }
      if (WeaponEntityId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(WeaponEntityId);
      }
      if (weaponAbilityInfo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(WeaponAbilityInfo);
      }
      if (abilityControlBlock_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(AbilityControlBlock);
      }
      if (IsReconnect != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsReconnect);
      }
      if (IsPlayerCurAvatar != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsPlayerCurAvatar);
      }
      if (IsOnScene != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IsOnScene);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerUid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerUid);
      }
      if (AvatarGuid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AvatarGuid);
      }
      if (SceneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SceneId);
      }
      if (EntityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EntityId);
      }
      if (avatarInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AvatarInfo);
      }
      if (sceneAvatarInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SceneAvatarInfo);
      }
      if (avatarAbilityInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AvatarAbilityInfo);
      }
      size += serverBuffList_.CalculateSize(_repeated_serverBuffList_codec);
      if (sceneEntityInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SceneEntityInfo);
      }
      if (WeaponGuid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(WeaponGuid);
      }
      if (WeaponEntityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WeaponEntityId);
      }
      if (weaponAbilityInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WeaponAbilityInfo);
      }
      if (abilityControlBlock_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AbilityControlBlock);
      }
      if (IsReconnect != false) {
        size += 1 + 1;
      }
      if (IsPlayerCurAvatar != false) {
        size += 1 + 1;
      }
      if (IsOnScene != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SceneTeamAvatar other) {
      if (other == null) {
        return;
      }
      if (other.PlayerUid != 0) {
        PlayerUid = other.PlayerUid;
      }
      if (other.AvatarGuid != 0UL) {
        AvatarGuid = other.AvatarGuid;
      }
      if (other.SceneId != 0) {
        SceneId = other.SceneId;
      }
      if (other.EntityId != 0) {
        EntityId = other.EntityId;
      }
      if (other.avatarInfo_ != null) {
        if (avatarInfo_ == null) {
          AvatarInfo = new global::Lemonade.Net.Protocol.AvatarInfo();
        }
        AvatarInfo.MergeFrom(other.AvatarInfo);
      }
      if (other.sceneAvatarInfo_ != null) {
        if (sceneAvatarInfo_ == null) {
          SceneAvatarInfo = new global::Lemonade.Net.Protocol.SceneAvatarInfo();
        }
        SceneAvatarInfo.MergeFrom(other.SceneAvatarInfo);
      }
      if (other.avatarAbilityInfo_ != null) {
        if (avatarAbilityInfo_ == null) {
          AvatarAbilityInfo = new global::Lemonade.Net.Protocol.AbilitySyncStateInfo();
        }
        AvatarAbilityInfo.MergeFrom(other.AvatarAbilityInfo);
      }
      serverBuffList_.Add(other.serverBuffList_);
      if (other.sceneEntityInfo_ != null) {
        if (sceneEntityInfo_ == null) {
          SceneEntityInfo = new global::Lemonade.Net.Protocol.SceneEntityInfo();
        }
        SceneEntityInfo.MergeFrom(other.SceneEntityInfo);
      }
      if (other.WeaponGuid != 0UL) {
        WeaponGuid = other.WeaponGuid;
      }
      if (other.WeaponEntityId != 0) {
        WeaponEntityId = other.WeaponEntityId;
      }
      if (other.weaponAbilityInfo_ != null) {
        if (weaponAbilityInfo_ == null) {
          WeaponAbilityInfo = new global::Lemonade.Net.Protocol.AbilitySyncStateInfo();
        }
        WeaponAbilityInfo.MergeFrom(other.WeaponAbilityInfo);
      }
      if (other.abilityControlBlock_ != null) {
        if (abilityControlBlock_ == null) {
          AbilityControlBlock = new global::Lemonade.Net.Protocol.AbilityControlBlock();
        }
        AbilityControlBlock.MergeFrom(other.AbilityControlBlock);
      }
      if (other.IsReconnect != false) {
        IsReconnect = other.IsReconnect;
      }
      if (other.IsPlayerCurAvatar != false) {
        IsPlayerCurAvatar = other.IsPlayerCurAvatar;
      }
      if (other.IsOnScene != false) {
        IsOnScene = other.IsOnScene;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerUid = input.ReadUInt32();
            break;
          }
          case 16: {
            AvatarGuid = input.ReadUInt64();
            break;
          }
          case 24: {
            SceneId = input.ReadUInt32();
            break;
          }
          case 32: {
            EntityId = input.ReadUInt32();
            break;
          }
          case 42: {
            if (avatarInfo_ == null) {
              AvatarInfo = new global::Lemonade.Net.Protocol.AvatarInfo();
            }
            input.ReadMessage(AvatarInfo);
            break;
          }
          case 50: {
            if (sceneAvatarInfo_ == null) {
              SceneAvatarInfo = new global::Lemonade.Net.Protocol.SceneAvatarInfo();
            }
            input.ReadMessage(SceneAvatarInfo);
            break;
          }
          case 58: {
            if (avatarAbilityInfo_ == null) {
              AvatarAbilityInfo = new global::Lemonade.Net.Protocol.AbilitySyncStateInfo();
            }
            input.ReadMessage(AvatarAbilityInfo);
            break;
          }
          case 66: {
            serverBuffList_.AddEntriesFrom(input, _repeated_serverBuffList_codec);
            break;
          }
          case 74: {
            if (sceneEntityInfo_ == null) {
              SceneEntityInfo = new global::Lemonade.Net.Protocol.SceneEntityInfo();
            }
            input.ReadMessage(SceneEntityInfo);
            break;
          }
          case 80: {
            WeaponGuid = input.ReadUInt64();
            break;
          }
          case 88: {
            WeaponEntityId = input.ReadUInt32();
            break;
          }
          case 98: {
            if (weaponAbilityInfo_ == null) {
              WeaponAbilityInfo = new global::Lemonade.Net.Protocol.AbilitySyncStateInfo();
            }
            input.ReadMessage(WeaponAbilityInfo);
            break;
          }
          case 106: {
            if (abilityControlBlock_ == null) {
              AbilityControlBlock = new global::Lemonade.Net.Protocol.AbilityControlBlock();
            }
            input.ReadMessage(AbilityControlBlock);
            break;
          }
          case 112: {
            IsReconnect = input.ReadBool();
            break;
          }
          case 120: {
            IsPlayerCurAvatar = input.ReadBool();
            break;
          }
          case 128: {
            IsOnScene = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerUid = input.ReadUInt32();
            break;
          }
          case 16: {
            AvatarGuid = input.ReadUInt64();
            break;
          }
          case 24: {
            SceneId = input.ReadUInt32();
            break;
          }
          case 32: {
            EntityId = input.ReadUInt32();
            break;
          }
          case 42: {
            if (avatarInfo_ == null) {
              AvatarInfo = new global::Lemonade.Net.Protocol.AvatarInfo();
            }
            input.ReadMessage(AvatarInfo);
            break;
          }
          case 50: {
            if (sceneAvatarInfo_ == null) {
              SceneAvatarInfo = new global::Lemonade.Net.Protocol.SceneAvatarInfo();
            }
            input.ReadMessage(SceneAvatarInfo);
            break;
          }
          case 58: {
            if (avatarAbilityInfo_ == null) {
              AvatarAbilityInfo = new global::Lemonade.Net.Protocol.AbilitySyncStateInfo();
            }
            input.ReadMessage(AvatarAbilityInfo);
            break;
          }
          case 66: {
            serverBuffList_.AddEntriesFrom(ref input, _repeated_serverBuffList_codec);
            break;
          }
          case 74: {
            if (sceneEntityInfo_ == null) {
              SceneEntityInfo = new global::Lemonade.Net.Protocol.SceneEntityInfo();
            }
            input.ReadMessage(SceneEntityInfo);
            break;
          }
          case 80: {
            WeaponGuid = input.ReadUInt64();
            break;
          }
          case 88: {
            WeaponEntityId = input.ReadUInt32();
            break;
          }
          case 98: {
            if (weaponAbilityInfo_ == null) {
              WeaponAbilityInfo = new global::Lemonade.Net.Protocol.AbilitySyncStateInfo();
            }
            input.ReadMessage(WeaponAbilityInfo);
            break;
          }
          case 106: {
            if (abilityControlBlock_ == null) {
              AbilityControlBlock = new global::Lemonade.Net.Protocol.AbilityControlBlock();
            }
            input.ReadMessage(AbilityControlBlock);
            break;
          }
          case 112: {
            IsReconnect = input.ReadBool();
            break;
          }
          case 120: {
            IsPlayerCurAvatar = input.ReadBool();
            break;
          }
          case 128: {
            IsOnScene = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
