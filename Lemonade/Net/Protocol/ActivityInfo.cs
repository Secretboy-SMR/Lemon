// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ActivityInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Lemonade.Net.Protocol {

  /// <summary>Holder for reflection information generated from ActivityInfo.proto</summary>
  public static partial class ActivityInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for ActivityInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ActivityInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJBY3Rpdml0eUluZm8ucHJvdG8aHEFjdGl2aXR5TnVsbERldGFpbEluZm8u",
            "cHJvdG8aGUFjdGl2aXR5V2F0Y2hlckluZm8ucHJvdG8i9hEKDEFjdGl2aXR5",
            "SW5mbxIwCg1zYW1fbGFtcF9pbmZvGAsgASgLMhcuQWN0aXZpdHlOdWxsRGV0",
            "YWlsSW5mb0gAEjAKDWNydWNpYmxlX2luZm8YDCABKAsyFy5BY3Rpdml0eU51",
            "bGxEZXRhaWxJbmZvSAASMAoNc2FsZXNtYW5faW5mbxgNIAEoCzIXLkFjdGl2",
            "aXR5TnVsbERldGFpbEluZm9IABI0ChF0cmlhbF9hdmF0YXJfaW5mbxgOIAEo",
            "CzIXLkFjdGl2aXR5TnVsbERldGFpbEluZm9IABIwCg1kZWxpdmVyeV9pbmZv",
            "GBAgASgLMhcuQWN0aXZpdHlOdWxsRGV0YWlsSW5mb0gAEi0KCmFzdGVyX2lu",
            "Zm8YFSABKAsyFy5BY3Rpdml0eU51bGxEZXRhaWxJbmZvSAASLgoLZmxpZ2h0",
            "X2luZm8YGSABKAsyFy5BY3Rpdml0eU51bGxEZXRhaWxJbmZvSAASNAoRZHJh",
            "Z29uX3NwaW5lX2luZm8YHyABKAsyFy5BY3Rpdml0eU51bGxEZXRhaWxJbmZv",
            "SAASLgoLZWZmaWd5X2luZm8YICABKAsyFy5BY3Rpdml0eU51bGxEZXRhaWxJ",
            "bmZvSAASNAoRdHJlYXN1cmVfbWFwX2luZm8YIyABKAsyFy5BY3Rpdml0eU51",
            "bGxEZXRhaWxJbmZvSAASMAoNYmxlc3NpbmdfaW5mbxgpIAEoCzIXLkFjdGl2",
            "aXR5TnVsbERldGFpbEluZm9IABIwCg1zZWFfbGFtcF9pbmZvGCogASgLMhcu",
            "QWN0aXZpdHlOdWxsRGV0YWlsSW5mb0gAEjIKD2V4cGVkaXRpb25faW5mbxgr",
            "IAEoCzIXLkFjdGl2aXR5TnVsbERldGFpbEluZm9IABI3ChRhcmVuYV9jaGFs",
            "bGVuZ2VfaW5mbxgsIAEoCzIXLkFjdGl2aXR5TnVsbERldGFpbEluZm9IABIy",
            "Cg9mbGV1cl9mYWlyX2luZm8YMyABKAsyFy5BY3Rpdml0eU51bGxEZXRhaWxJ",
            "bmZvSAASNAoRd2F0ZXJfc3Bpcml0X2luZm8YNCABKAsyFy5BY3Rpdml0eU51",
            "bGxEZXRhaWxJbmZvSAASNwoUY2hhbGxuZWxlcl9zbGFiX2luZm8YPSABKAsy",
            "Fy5BY3Rpdml0eU51bGxEZXRhaWxJbmZvSAASOwoYbWlzdF90cmlhbF9hY3Rp",
            "dml0eV9pbmZvGD4gASgLMhcuQWN0aXZpdHlOdWxsRGV0YWlsSW5mb0gAEjUK",
            "EmhpZGVfYW5kX3NlZWtfaW5mbxg/IAEoCzIXLkFjdGl2aXR5TnVsbERldGFp",
            "bEluZm9IABI2ChNmaW5kX2hpbGljaHVybF9pbmZvGEAgASgLMhcuQWN0aXZp",
            "dHlOdWxsRGV0YWlsSW5mb0gAEjMKEHN1bW1lcl90aW1lX2luZm8YQSABKAsy",
            "Fy5BY3Rpdml0eU51bGxEZXRhaWxJbmZvSAASNgoTYnVveWFudF9jb21iYXRf",
            "aW5mbxhCIAEoCzIXLkFjdGl2aXR5TnVsbERldGFpbEluZm9IABIyCg9lY2hv",
            "X3NoZWxsX2luZm8YQyABKAsyFy5BY3Rpdml0eU51bGxEZXRhaWxJbmZvSAAS",
            "OAoVYm91bmNlX2Nvbmp1cmluZ19pbmZvGEQgASgLMhcuQWN0aXZpdHlOdWxs",
            "RGV0YWlsSW5mb0gAEjIKD2JsaXR6X3J1c2hfaW5mbxhFIAEoCzIXLkFjdGl2",
            "aXR5TnVsbERldGFpbEluZm9IABItCgpjaGVzc19pbmZvGEYgASgLMhcuQWN0",
            "aXZpdHlOdWxsRGV0YWlsSW5mb0gAEiwKCXN1bW9faW5mbxhHIAEoCzIXLkFj",
            "dGl2aXR5TnVsbERldGFpbEluZm9IABI1ChJtb29uZmluX3RyaWFsX2luZm8Y",
            "SCABKAsyFy5BY3Rpdml0eU51bGxEZXRhaWxJbmZvSAASMQoObHVuYV9yaXRl",
            "X2luZm8YSSABKAsyFy5BY3Rpdml0eU51bGxEZXRhaWxJbmZvSAASNAoRcGxh",
            "bnRfZmxvd2VyX2luZm8YSiABKAsyFy5BY3Rpdml0eU51bGxEZXRhaWxJbmZv",
            "SAASMgoPbXVzaWNfZ2FtZV9pbmZvGEsgASgLMhcuQWN0aXZpdHlOdWxsRGV0",
            "YWlsSW5mb0gAEjkKFnJvZ3VlbGlrZV9kdW5nb2VuX2luZm8YTCABKAsyFy5B",
            "Y3Rpdml0eU51bGxEZXRhaWxJbmZvSAASKwoIZGlnX2luZm8YTSABKAsyFy5B",
            "Y3Rpdml0eU51bGxEZXRhaWxJbmZvSAASEwoLYWN0aXZpdHlfaWQYASABKA0S",
            "EwoLc2NoZWR1bGVfaWQYAiABKA0SEgoKYmVnaW5fdGltZRgDIAEoDRIQCghl",
            "bmRfdGltZRgEIAEoDRIVCg1hY3Rpdml0eV90eXBlGAUgASgNEhkKEWlzX3Bs",
            "YXlfb3Blbl9hbmltGAYgASgIEhMKC2lzX2ZpbmlzaGVkGAcgASgIEhMKC2lz",
            "X3N0YXJ0aW5nGAggASgIEi8KEXdhdGNoZXJfaW5mb19saXN0GAkgAygLMhQu",
            "QWN0aXZpdHlXYXRjaGVySW5mbxIWCg5tZWV0X2NvbmRfbGlzdBgKIAMoDRIY",
            "ChBleHBpcmVfY29uZF9saXN0GA8gAygNEiEKGXNlbGVjdGVkX2F2YXRhcl9y",
            "ZXdhcmRfaWQYESABKA0SPQoRYWN0aXZpdHlfY29pbl9tYXAYEiADKAsyIi5B",
            "Y3Rpdml0eUluZm8uQWN0aXZpdHlDb2luTWFwRW50cnkSEwoLc2NvcmVfbGlt",
            "aXQYEyABKA0SEQoJY3VyX3Njb3JlGBQgASgNEhkKEXRha2VuX3Jld2FyZF9s",
            "aXN0GBggAygNEhEKCWlzX2hpZGRlbhgaIAEoCBIcChRmaXJzdF9kYXlfc3Rh",
            "cnRfdGltZRgbIAEoDRo2ChRBY3Rpdml0eUNvaW5NYXBFbnRyeRILCgNrZXkY",
            "ASABKA0SDQoFdmFsdWUYAiABKA06AjgBQggKBkRldGFpbEIYqgIVTGVtb25h",
            "ZGUuTmV0LlByb3RvY29sYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Lemonade.Net.Protocol.ActivityNullDetailInfoReflection.Descriptor, global::Lemonade.Net.Protocol.ActivityWatcherInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Lemonade.Net.Protocol.ActivityInfo), global::Lemonade.Net.Protocol.ActivityInfo.Parser, new[]{ "SamLampInfo", "CrucibleInfo", "SalesmanInfo", "TrialAvatarInfo", "DeliveryInfo", "AsterInfo", "FlightInfo", "DragonSpineInfo", "EffigyInfo", "TreasureMapInfo", "BlessingInfo", "SeaLampInfo", "ExpeditionInfo", "ArenaChallengeInfo", "FleurFairInfo", "WaterSpiritInfo", "ChallnelerSlabInfo", "MistTrialActivityInfo", "HideAndSeekInfo", "FindHilichurlInfo", "SummerTimeInfo", "BuoyantCombatInfo", "EchoShellInfo", "BounceConjuringInfo", "BlitzRushInfo", "ChessInfo", "SumoInfo", "MoonfinTrialInfo", "LunaRiteInfo", "PlantFlowerInfo", "MusicGameInfo", "RoguelikeDungoenInfo", "DigInfo", "ActivityId", "ScheduleId", "BeginTime", "EndTime", "ActivityType", "IsPlayOpenAnim", "IsFinished", "IsStarting", "WatcherInfoList", "MeetCondList", "ExpireCondList", "SelectedAvatarRewardId", "ActivityCoinMap", "ScoreLimit", "CurScore", "TakenRewardList", "IsHidden", "FirstDayStartTime" }, new[]{ "Detail" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ActivityInfo : pb::IMessage<ActivityInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivityInfo> _parser = new pb::MessageParser<ActivityInfo>(() => new ActivityInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActivityInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Lemonade.Net.Protocol.ActivityInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityInfo(ActivityInfo other) : this() {
      activityId_ = other.activityId_;
      scheduleId_ = other.scheduleId_;
      beginTime_ = other.beginTime_;
      endTime_ = other.endTime_;
      activityType_ = other.activityType_;
      isPlayOpenAnim_ = other.isPlayOpenAnim_;
      isFinished_ = other.isFinished_;
      isStarting_ = other.isStarting_;
      watcherInfoList_ = other.watcherInfoList_.Clone();
      meetCondList_ = other.meetCondList_.Clone();
      expireCondList_ = other.expireCondList_.Clone();
      selectedAvatarRewardId_ = other.selectedAvatarRewardId_;
      activityCoinMap_ = other.activityCoinMap_.Clone();
      scoreLimit_ = other.scoreLimit_;
      curScore_ = other.curScore_;
      takenRewardList_ = other.takenRewardList_.Clone();
      isHidden_ = other.isHidden_;
      firstDayStartTime_ = other.firstDayStartTime_;
      switch (other.DetailCase) {
        case DetailOneofCase.SamLampInfo:
          SamLampInfo = other.SamLampInfo.Clone();
          break;
        case DetailOneofCase.CrucibleInfo:
          CrucibleInfo = other.CrucibleInfo.Clone();
          break;
        case DetailOneofCase.SalesmanInfo:
          SalesmanInfo = other.SalesmanInfo.Clone();
          break;
        case DetailOneofCase.TrialAvatarInfo:
          TrialAvatarInfo = other.TrialAvatarInfo.Clone();
          break;
        case DetailOneofCase.DeliveryInfo:
          DeliveryInfo = other.DeliveryInfo.Clone();
          break;
        case DetailOneofCase.AsterInfo:
          AsterInfo = other.AsterInfo.Clone();
          break;
        case DetailOneofCase.FlightInfo:
          FlightInfo = other.FlightInfo.Clone();
          break;
        case DetailOneofCase.DragonSpineInfo:
          DragonSpineInfo = other.DragonSpineInfo.Clone();
          break;
        case DetailOneofCase.EffigyInfo:
          EffigyInfo = other.EffigyInfo.Clone();
          break;
        case DetailOneofCase.TreasureMapInfo:
          TreasureMapInfo = other.TreasureMapInfo.Clone();
          break;
        case DetailOneofCase.BlessingInfo:
          BlessingInfo = other.BlessingInfo.Clone();
          break;
        case DetailOneofCase.SeaLampInfo:
          SeaLampInfo = other.SeaLampInfo.Clone();
          break;
        case DetailOneofCase.ExpeditionInfo:
          ExpeditionInfo = other.ExpeditionInfo.Clone();
          break;
        case DetailOneofCase.ArenaChallengeInfo:
          ArenaChallengeInfo = other.ArenaChallengeInfo.Clone();
          break;
        case DetailOneofCase.FleurFairInfo:
          FleurFairInfo = other.FleurFairInfo.Clone();
          break;
        case DetailOneofCase.WaterSpiritInfo:
          WaterSpiritInfo = other.WaterSpiritInfo.Clone();
          break;
        case DetailOneofCase.ChallnelerSlabInfo:
          ChallnelerSlabInfo = other.ChallnelerSlabInfo.Clone();
          break;
        case DetailOneofCase.MistTrialActivityInfo:
          MistTrialActivityInfo = other.MistTrialActivityInfo.Clone();
          break;
        case DetailOneofCase.HideAndSeekInfo:
          HideAndSeekInfo = other.HideAndSeekInfo.Clone();
          break;
        case DetailOneofCase.FindHilichurlInfo:
          FindHilichurlInfo = other.FindHilichurlInfo.Clone();
          break;
        case DetailOneofCase.SummerTimeInfo:
          SummerTimeInfo = other.SummerTimeInfo.Clone();
          break;
        case DetailOneofCase.BuoyantCombatInfo:
          BuoyantCombatInfo = other.BuoyantCombatInfo.Clone();
          break;
        case DetailOneofCase.EchoShellInfo:
          EchoShellInfo = other.EchoShellInfo.Clone();
          break;
        case DetailOneofCase.BounceConjuringInfo:
          BounceConjuringInfo = other.BounceConjuringInfo.Clone();
          break;
        case DetailOneofCase.BlitzRushInfo:
          BlitzRushInfo = other.BlitzRushInfo.Clone();
          break;
        case DetailOneofCase.ChessInfo:
          ChessInfo = other.ChessInfo.Clone();
          break;
        case DetailOneofCase.SumoInfo:
          SumoInfo = other.SumoInfo.Clone();
          break;
        case DetailOneofCase.MoonfinTrialInfo:
          MoonfinTrialInfo = other.MoonfinTrialInfo.Clone();
          break;
        case DetailOneofCase.LunaRiteInfo:
          LunaRiteInfo = other.LunaRiteInfo.Clone();
          break;
        case DetailOneofCase.PlantFlowerInfo:
          PlantFlowerInfo = other.PlantFlowerInfo.Clone();
          break;
        case DetailOneofCase.MusicGameInfo:
          MusicGameInfo = other.MusicGameInfo.Clone();
          break;
        case DetailOneofCase.RoguelikeDungoenInfo:
          RoguelikeDungoenInfo = other.RoguelikeDungoenInfo.Clone();
          break;
        case DetailOneofCase.DigInfo:
          DigInfo = other.DigInfo.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityInfo Clone() {
      return new ActivityInfo(this);
    }

    /// <summary>Field number for the "sam_lamp_info" field.</summary>
    public const int SamLampInfoFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo SamLampInfo {
      get { return detailCase_ == DetailOneofCase.SamLampInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.SamLampInfo;
      }
    }

    /// <summary>Field number for the "crucible_info" field.</summary>
    public const int CrucibleInfoFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo CrucibleInfo {
      get { return detailCase_ == DetailOneofCase.CrucibleInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.CrucibleInfo;
      }
    }

    /// <summary>Field number for the "salesman_info" field.</summary>
    public const int SalesmanInfoFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo SalesmanInfo {
      get { return detailCase_ == DetailOneofCase.SalesmanInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.SalesmanInfo;
      }
    }

    /// <summary>Field number for the "trial_avatar_info" field.</summary>
    public const int TrialAvatarInfoFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo TrialAvatarInfo {
      get { return detailCase_ == DetailOneofCase.TrialAvatarInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.TrialAvatarInfo;
      }
    }

    /// <summary>Field number for the "delivery_info" field.</summary>
    public const int DeliveryInfoFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo DeliveryInfo {
      get { return detailCase_ == DetailOneofCase.DeliveryInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.DeliveryInfo;
      }
    }

    /// <summary>Field number for the "aster_info" field.</summary>
    public const int AsterInfoFieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo AsterInfo {
      get { return detailCase_ == DetailOneofCase.AsterInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.AsterInfo;
      }
    }

    /// <summary>Field number for the "flight_info" field.</summary>
    public const int FlightInfoFieldNumber = 25;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo FlightInfo {
      get { return detailCase_ == DetailOneofCase.FlightInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.FlightInfo;
      }
    }

    /// <summary>Field number for the "dragon_spine_info" field.</summary>
    public const int DragonSpineInfoFieldNumber = 31;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo DragonSpineInfo {
      get { return detailCase_ == DetailOneofCase.DragonSpineInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.DragonSpineInfo;
      }
    }

    /// <summary>Field number for the "effigy_info" field.</summary>
    public const int EffigyInfoFieldNumber = 32;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo EffigyInfo {
      get { return detailCase_ == DetailOneofCase.EffigyInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.EffigyInfo;
      }
    }

    /// <summary>Field number for the "treasure_map_info" field.</summary>
    public const int TreasureMapInfoFieldNumber = 35;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo TreasureMapInfo {
      get { return detailCase_ == DetailOneofCase.TreasureMapInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.TreasureMapInfo;
      }
    }

    /// <summary>Field number for the "blessing_info" field.</summary>
    public const int BlessingInfoFieldNumber = 41;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo BlessingInfo {
      get { return detailCase_ == DetailOneofCase.BlessingInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.BlessingInfo;
      }
    }

    /// <summary>Field number for the "sea_lamp_info" field.</summary>
    public const int SeaLampInfoFieldNumber = 42;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo SeaLampInfo {
      get { return detailCase_ == DetailOneofCase.SeaLampInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.SeaLampInfo;
      }
    }

    /// <summary>Field number for the "expedition_info" field.</summary>
    public const int ExpeditionInfoFieldNumber = 43;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo ExpeditionInfo {
      get { return detailCase_ == DetailOneofCase.ExpeditionInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.ExpeditionInfo;
      }
    }

    /// <summary>Field number for the "arena_challenge_info" field.</summary>
    public const int ArenaChallengeInfoFieldNumber = 44;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo ArenaChallengeInfo {
      get { return detailCase_ == DetailOneofCase.ArenaChallengeInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.ArenaChallengeInfo;
      }
    }

    /// <summary>Field number for the "fleur_fair_info" field.</summary>
    public const int FleurFairInfoFieldNumber = 51;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo FleurFairInfo {
      get { return detailCase_ == DetailOneofCase.FleurFairInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.FleurFairInfo;
      }
    }

    /// <summary>Field number for the "water_spirit_info" field.</summary>
    public const int WaterSpiritInfoFieldNumber = 52;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo WaterSpiritInfo {
      get { return detailCase_ == DetailOneofCase.WaterSpiritInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.WaterSpiritInfo;
      }
    }

    /// <summary>Field number for the "challneler_slab_info" field.</summary>
    public const int ChallnelerSlabInfoFieldNumber = 61;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo ChallnelerSlabInfo {
      get { return detailCase_ == DetailOneofCase.ChallnelerSlabInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.ChallnelerSlabInfo;
      }
    }

    /// <summary>Field number for the "mist_trial_activity_info" field.</summary>
    public const int MistTrialActivityInfoFieldNumber = 62;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo MistTrialActivityInfo {
      get { return detailCase_ == DetailOneofCase.MistTrialActivityInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.MistTrialActivityInfo;
      }
    }

    /// <summary>Field number for the "hide_and_seek_info" field.</summary>
    public const int HideAndSeekInfoFieldNumber = 63;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo HideAndSeekInfo {
      get { return detailCase_ == DetailOneofCase.HideAndSeekInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.HideAndSeekInfo;
      }
    }

    /// <summary>Field number for the "find_hilichurl_info" field.</summary>
    public const int FindHilichurlInfoFieldNumber = 64;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo FindHilichurlInfo {
      get { return detailCase_ == DetailOneofCase.FindHilichurlInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.FindHilichurlInfo;
      }
    }

    /// <summary>Field number for the "summer_time_info" field.</summary>
    public const int SummerTimeInfoFieldNumber = 65;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo SummerTimeInfo {
      get { return detailCase_ == DetailOneofCase.SummerTimeInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.SummerTimeInfo;
      }
    }

    /// <summary>Field number for the "buoyant_combat_info" field.</summary>
    public const int BuoyantCombatInfoFieldNumber = 66;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo BuoyantCombatInfo {
      get { return detailCase_ == DetailOneofCase.BuoyantCombatInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.BuoyantCombatInfo;
      }
    }

    /// <summary>Field number for the "echo_shell_info" field.</summary>
    public const int EchoShellInfoFieldNumber = 67;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo EchoShellInfo {
      get { return detailCase_ == DetailOneofCase.EchoShellInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.EchoShellInfo;
      }
    }

    /// <summary>Field number for the "bounce_conjuring_info" field.</summary>
    public const int BounceConjuringInfoFieldNumber = 68;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo BounceConjuringInfo {
      get { return detailCase_ == DetailOneofCase.BounceConjuringInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.BounceConjuringInfo;
      }
    }

    /// <summary>Field number for the "blitz_rush_info" field.</summary>
    public const int BlitzRushInfoFieldNumber = 69;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo BlitzRushInfo {
      get { return detailCase_ == DetailOneofCase.BlitzRushInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.BlitzRushInfo;
      }
    }

    /// <summary>Field number for the "chess_info" field.</summary>
    public const int ChessInfoFieldNumber = 70;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo ChessInfo {
      get { return detailCase_ == DetailOneofCase.ChessInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.ChessInfo;
      }
    }

    /// <summary>Field number for the "sumo_info" field.</summary>
    public const int SumoInfoFieldNumber = 71;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo SumoInfo {
      get { return detailCase_ == DetailOneofCase.SumoInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.SumoInfo;
      }
    }

    /// <summary>Field number for the "moonfin_trial_info" field.</summary>
    public const int MoonfinTrialInfoFieldNumber = 72;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo MoonfinTrialInfo {
      get { return detailCase_ == DetailOneofCase.MoonfinTrialInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.MoonfinTrialInfo;
      }
    }

    /// <summary>Field number for the "luna_rite_info" field.</summary>
    public const int LunaRiteInfoFieldNumber = 73;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo LunaRiteInfo {
      get { return detailCase_ == DetailOneofCase.LunaRiteInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.LunaRiteInfo;
      }
    }

    /// <summary>Field number for the "plant_flower_info" field.</summary>
    public const int PlantFlowerInfoFieldNumber = 74;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo PlantFlowerInfo {
      get { return detailCase_ == DetailOneofCase.PlantFlowerInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.PlantFlowerInfo;
      }
    }

    /// <summary>Field number for the "music_game_info" field.</summary>
    public const int MusicGameInfoFieldNumber = 75;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo MusicGameInfo {
      get { return detailCase_ == DetailOneofCase.MusicGameInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.MusicGameInfo;
      }
    }

    /// <summary>Field number for the "roguelike_dungoen_info" field.</summary>
    public const int RoguelikeDungoenInfoFieldNumber = 76;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo RoguelikeDungoenInfo {
      get { return detailCase_ == DetailOneofCase.RoguelikeDungoenInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.RoguelikeDungoenInfo;
      }
    }

    /// <summary>Field number for the "dig_info" field.</summary>
    public const int DigInfoFieldNumber = 77;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.ActivityNullDetailInfo DigInfo {
      get { return detailCase_ == DetailOneofCase.DigInfo ? (global::Lemonade.Net.Protocol.ActivityNullDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.DigInfo;
      }
    }

    /// <summary>Field number for the "activity_id" field.</summary>
    public const int ActivityIdFieldNumber = 1;
    private uint activityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ActivityId {
      get { return activityId_; }
      set {
        activityId_ = value;
      }
    }

    /// <summary>Field number for the "schedule_id" field.</summary>
    public const int ScheduleIdFieldNumber = 2;
    private uint scheduleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScheduleId {
      get { return scheduleId_; }
      set {
        scheduleId_ = value;
      }
    }

    /// <summary>Field number for the "begin_time" field.</summary>
    public const int BeginTimeFieldNumber = 3;
    private uint beginTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BeginTime {
      get { return beginTime_; }
      set {
        beginTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 4;
    private uint endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "activity_type" field.</summary>
    public const int ActivityTypeFieldNumber = 5;
    private uint activityType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ActivityType {
      get { return activityType_; }
      set {
        activityType_ = value;
      }
    }

    /// <summary>Field number for the "is_play_open_anim" field.</summary>
    public const int IsPlayOpenAnimFieldNumber = 6;
    private bool isPlayOpenAnim_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPlayOpenAnim {
      get { return isPlayOpenAnim_; }
      set {
        isPlayOpenAnim_ = value;
      }
    }

    /// <summary>Field number for the "is_finished" field.</summary>
    public const int IsFinishedFieldNumber = 7;
    private bool isFinished_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsFinished {
      get { return isFinished_; }
      set {
        isFinished_ = value;
      }
    }

    /// <summary>Field number for the "is_starting" field.</summary>
    public const int IsStartingFieldNumber = 8;
    private bool isStarting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsStarting {
      get { return isStarting_; }
      set {
        isStarting_ = value;
      }
    }

    /// <summary>Field number for the "watcher_info_list" field.</summary>
    public const int WatcherInfoListFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Lemonade.Net.Protocol.ActivityWatcherInfo> _repeated_watcherInfoList_codec
        = pb::FieldCodec.ForMessage(74, global::Lemonade.Net.Protocol.ActivityWatcherInfo.Parser);
    private readonly pbc::RepeatedField<global::Lemonade.Net.Protocol.ActivityWatcherInfo> watcherInfoList_ = new pbc::RepeatedField<global::Lemonade.Net.Protocol.ActivityWatcherInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Lemonade.Net.Protocol.ActivityWatcherInfo> WatcherInfoList {
      get { return watcherInfoList_; }
    }

    /// <summary>Field number for the "meet_cond_list" field.</summary>
    public const int MeetCondListFieldNumber = 10;
    private static readonly pb::FieldCodec<uint> _repeated_meetCondList_codec
        = pb::FieldCodec.ForUInt32(82);
    private readonly pbc::RepeatedField<uint> meetCondList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> MeetCondList {
      get { return meetCondList_; }
    }

    /// <summary>Field number for the "expire_cond_list" field.</summary>
    public const int ExpireCondListFieldNumber = 15;
    private static readonly pb::FieldCodec<uint> _repeated_expireCondList_codec
        = pb::FieldCodec.ForUInt32(122);
    private readonly pbc::RepeatedField<uint> expireCondList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ExpireCondList {
      get { return expireCondList_; }
    }

    /// <summary>Field number for the "selected_avatar_reward_id" field.</summary>
    public const int SelectedAvatarRewardIdFieldNumber = 17;
    private uint selectedAvatarRewardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SelectedAvatarRewardId {
      get { return selectedAvatarRewardId_; }
      set {
        selectedAvatarRewardId_ = value;
      }
    }

    /// <summary>Field number for the "activity_coin_map" field.</summary>
    public const int ActivityCoinMapFieldNumber = 18;
    private static readonly pbc::MapField<uint, uint>.Codec _map_activityCoinMap_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 146);
    private readonly pbc::MapField<uint, uint> activityCoinMap_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> ActivityCoinMap {
      get { return activityCoinMap_; }
    }

    /// <summary>Field number for the "score_limit" field.</summary>
    public const int ScoreLimitFieldNumber = 19;
    private uint scoreLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScoreLimit {
      get { return scoreLimit_; }
      set {
        scoreLimit_ = value;
      }
    }

    /// <summary>Field number for the "cur_score" field.</summary>
    public const int CurScoreFieldNumber = 20;
    private uint curScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CurScore {
      get { return curScore_; }
      set {
        curScore_ = value;
      }
    }

    /// <summary>Field number for the "taken_reward_list" field.</summary>
    public const int TakenRewardListFieldNumber = 24;
    private static readonly pb::FieldCodec<uint> _repeated_takenRewardList_codec
        = pb::FieldCodec.ForUInt32(194);
    private readonly pbc::RepeatedField<uint> takenRewardList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> TakenRewardList {
      get { return takenRewardList_; }
    }

    /// <summary>Field number for the "is_hidden" field.</summary>
    public const int IsHiddenFieldNumber = 26;
    private bool isHidden_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsHidden {
      get { return isHidden_; }
      set {
        isHidden_ = value;
      }
    }

    /// <summary>Field number for the "first_day_start_time" field.</summary>
    public const int FirstDayStartTimeFieldNumber = 27;
    private uint firstDayStartTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FirstDayStartTime {
      get { return firstDayStartTime_; }
      set {
        firstDayStartTime_ = value;
      }
    }

    private object detail_;
    /// <summary>Enum of possible cases for the "Detail" oneof.</summary>
    public enum DetailOneofCase {
      None = 0,
      SamLampInfo = 11,
      CrucibleInfo = 12,
      SalesmanInfo = 13,
      TrialAvatarInfo = 14,
      DeliveryInfo = 16,
      AsterInfo = 21,
      FlightInfo = 25,
      DragonSpineInfo = 31,
      EffigyInfo = 32,
      TreasureMapInfo = 35,
      BlessingInfo = 41,
      SeaLampInfo = 42,
      ExpeditionInfo = 43,
      ArenaChallengeInfo = 44,
      FleurFairInfo = 51,
      WaterSpiritInfo = 52,
      ChallnelerSlabInfo = 61,
      MistTrialActivityInfo = 62,
      HideAndSeekInfo = 63,
      FindHilichurlInfo = 64,
      SummerTimeInfo = 65,
      BuoyantCombatInfo = 66,
      EchoShellInfo = 67,
      BounceConjuringInfo = 68,
      BlitzRushInfo = 69,
      ChessInfo = 70,
      SumoInfo = 71,
      MoonfinTrialInfo = 72,
      LunaRiteInfo = 73,
      PlantFlowerInfo = 74,
      MusicGameInfo = 75,
      RoguelikeDungoenInfo = 76,
      DigInfo = 77,
    }
    private DetailOneofCase detailCase_ = DetailOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DetailOneofCase DetailCase {
      get { return detailCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDetail() {
      detailCase_ = DetailOneofCase.None;
      detail_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActivityInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActivityInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SamLampInfo, other.SamLampInfo)) return false;
      if (!object.Equals(CrucibleInfo, other.CrucibleInfo)) return false;
      if (!object.Equals(SalesmanInfo, other.SalesmanInfo)) return false;
      if (!object.Equals(TrialAvatarInfo, other.TrialAvatarInfo)) return false;
      if (!object.Equals(DeliveryInfo, other.DeliveryInfo)) return false;
      if (!object.Equals(AsterInfo, other.AsterInfo)) return false;
      if (!object.Equals(FlightInfo, other.FlightInfo)) return false;
      if (!object.Equals(DragonSpineInfo, other.DragonSpineInfo)) return false;
      if (!object.Equals(EffigyInfo, other.EffigyInfo)) return false;
      if (!object.Equals(TreasureMapInfo, other.TreasureMapInfo)) return false;
      if (!object.Equals(BlessingInfo, other.BlessingInfo)) return false;
      if (!object.Equals(SeaLampInfo, other.SeaLampInfo)) return false;
      if (!object.Equals(ExpeditionInfo, other.ExpeditionInfo)) return false;
      if (!object.Equals(ArenaChallengeInfo, other.ArenaChallengeInfo)) return false;
      if (!object.Equals(FleurFairInfo, other.FleurFairInfo)) return false;
      if (!object.Equals(WaterSpiritInfo, other.WaterSpiritInfo)) return false;
      if (!object.Equals(ChallnelerSlabInfo, other.ChallnelerSlabInfo)) return false;
      if (!object.Equals(MistTrialActivityInfo, other.MistTrialActivityInfo)) return false;
      if (!object.Equals(HideAndSeekInfo, other.HideAndSeekInfo)) return false;
      if (!object.Equals(FindHilichurlInfo, other.FindHilichurlInfo)) return false;
      if (!object.Equals(SummerTimeInfo, other.SummerTimeInfo)) return false;
      if (!object.Equals(BuoyantCombatInfo, other.BuoyantCombatInfo)) return false;
      if (!object.Equals(EchoShellInfo, other.EchoShellInfo)) return false;
      if (!object.Equals(BounceConjuringInfo, other.BounceConjuringInfo)) return false;
      if (!object.Equals(BlitzRushInfo, other.BlitzRushInfo)) return false;
      if (!object.Equals(ChessInfo, other.ChessInfo)) return false;
      if (!object.Equals(SumoInfo, other.SumoInfo)) return false;
      if (!object.Equals(MoonfinTrialInfo, other.MoonfinTrialInfo)) return false;
      if (!object.Equals(LunaRiteInfo, other.LunaRiteInfo)) return false;
      if (!object.Equals(PlantFlowerInfo, other.PlantFlowerInfo)) return false;
      if (!object.Equals(MusicGameInfo, other.MusicGameInfo)) return false;
      if (!object.Equals(RoguelikeDungoenInfo, other.RoguelikeDungoenInfo)) return false;
      if (!object.Equals(DigInfo, other.DigInfo)) return false;
      if (ActivityId != other.ActivityId) return false;
      if (ScheduleId != other.ScheduleId) return false;
      if (BeginTime != other.BeginTime) return false;
      if (EndTime != other.EndTime) return false;
      if (ActivityType != other.ActivityType) return false;
      if (IsPlayOpenAnim != other.IsPlayOpenAnim) return false;
      if (IsFinished != other.IsFinished) return false;
      if (IsStarting != other.IsStarting) return false;
      if(!watcherInfoList_.Equals(other.watcherInfoList_)) return false;
      if(!meetCondList_.Equals(other.meetCondList_)) return false;
      if(!expireCondList_.Equals(other.expireCondList_)) return false;
      if (SelectedAvatarRewardId != other.SelectedAvatarRewardId) return false;
      if (!ActivityCoinMap.Equals(other.ActivityCoinMap)) return false;
      if (ScoreLimit != other.ScoreLimit) return false;
      if (CurScore != other.CurScore) return false;
      if(!takenRewardList_.Equals(other.takenRewardList_)) return false;
      if (IsHidden != other.IsHidden) return false;
      if (FirstDayStartTime != other.FirstDayStartTime) return false;
      if (DetailCase != other.DetailCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (detailCase_ == DetailOneofCase.SamLampInfo) hash ^= SamLampInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.CrucibleInfo) hash ^= CrucibleInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.SalesmanInfo) hash ^= SalesmanInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.TrialAvatarInfo) hash ^= TrialAvatarInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.DeliveryInfo) hash ^= DeliveryInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.AsterInfo) hash ^= AsterInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.FlightInfo) hash ^= FlightInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.DragonSpineInfo) hash ^= DragonSpineInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.EffigyInfo) hash ^= EffigyInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.TreasureMapInfo) hash ^= TreasureMapInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.BlessingInfo) hash ^= BlessingInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.SeaLampInfo) hash ^= SeaLampInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.ExpeditionInfo) hash ^= ExpeditionInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.ArenaChallengeInfo) hash ^= ArenaChallengeInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.FleurFairInfo) hash ^= FleurFairInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.WaterSpiritInfo) hash ^= WaterSpiritInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.ChallnelerSlabInfo) hash ^= ChallnelerSlabInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.MistTrialActivityInfo) hash ^= MistTrialActivityInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.HideAndSeekInfo) hash ^= HideAndSeekInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.FindHilichurlInfo) hash ^= FindHilichurlInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.SummerTimeInfo) hash ^= SummerTimeInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.BuoyantCombatInfo) hash ^= BuoyantCombatInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.EchoShellInfo) hash ^= EchoShellInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.BounceConjuringInfo) hash ^= BounceConjuringInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.BlitzRushInfo) hash ^= BlitzRushInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.ChessInfo) hash ^= ChessInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.SumoInfo) hash ^= SumoInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.MoonfinTrialInfo) hash ^= MoonfinTrialInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.LunaRiteInfo) hash ^= LunaRiteInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.PlantFlowerInfo) hash ^= PlantFlowerInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.MusicGameInfo) hash ^= MusicGameInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.RoguelikeDungoenInfo) hash ^= RoguelikeDungoenInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.DigInfo) hash ^= DigInfo.GetHashCode();
      if (ActivityId != 0) hash ^= ActivityId.GetHashCode();
      if (ScheduleId != 0) hash ^= ScheduleId.GetHashCode();
      if (BeginTime != 0) hash ^= BeginTime.GetHashCode();
      if (EndTime != 0) hash ^= EndTime.GetHashCode();
      if (ActivityType != 0) hash ^= ActivityType.GetHashCode();
      if (IsPlayOpenAnim != false) hash ^= IsPlayOpenAnim.GetHashCode();
      if (IsFinished != false) hash ^= IsFinished.GetHashCode();
      if (IsStarting != false) hash ^= IsStarting.GetHashCode();
      hash ^= watcherInfoList_.GetHashCode();
      hash ^= meetCondList_.GetHashCode();
      hash ^= expireCondList_.GetHashCode();
      if (SelectedAvatarRewardId != 0) hash ^= SelectedAvatarRewardId.GetHashCode();
      hash ^= ActivityCoinMap.GetHashCode();
      if (ScoreLimit != 0) hash ^= ScoreLimit.GetHashCode();
      if (CurScore != 0) hash ^= CurScore.GetHashCode();
      hash ^= takenRewardList_.GetHashCode();
      if (IsHidden != false) hash ^= IsHidden.GetHashCode();
      if (FirstDayStartTime != 0) hash ^= FirstDayStartTime.GetHashCode();
      hash ^= (int) detailCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ActivityId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ActivityId);
      }
      if (ScheduleId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ScheduleId);
      }
      if (BeginTime != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(BeginTime);
      }
      if (EndTime != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(EndTime);
      }
      if (ActivityType != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ActivityType);
      }
      if (IsPlayOpenAnim != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsPlayOpenAnim);
      }
      if (IsFinished != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsFinished);
      }
      if (IsStarting != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsStarting);
      }
      watcherInfoList_.WriteTo(output, _repeated_watcherInfoList_codec);
      meetCondList_.WriteTo(output, _repeated_meetCondList_codec);
      if (detailCase_ == DetailOneofCase.SamLampInfo) {
        output.WriteRawTag(90);
        output.WriteMessage(SamLampInfo);
      }
      if (detailCase_ == DetailOneofCase.CrucibleInfo) {
        output.WriteRawTag(98);
        output.WriteMessage(CrucibleInfo);
      }
      if (detailCase_ == DetailOneofCase.SalesmanInfo) {
        output.WriteRawTag(106);
        output.WriteMessage(SalesmanInfo);
      }
      if (detailCase_ == DetailOneofCase.TrialAvatarInfo) {
        output.WriteRawTag(114);
        output.WriteMessage(TrialAvatarInfo);
      }
      expireCondList_.WriteTo(output, _repeated_expireCondList_codec);
      if (detailCase_ == DetailOneofCase.DeliveryInfo) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(DeliveryInfo);
      }
      if (SelectedAvatarRewardId != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(SelectedAvatarRewardId);
      }
      activityCoinMap_.WriteTo(output, _map_activityCoinMap_codec);
      if (ScoreLimit != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(ScoreLimit);
      }
      if (CurScore != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(CurScore);
      }
      if (detailCase_ == DetailOneofCase.AsterInfo) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(AsterInfo);
      }
      takenRewardList_.WriteTo(output, _repeated_takenRewardList_codec);
      if (detailCase_ == DetailOneofCase.FlightInfo) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(FlightInfo);
      }
      if (IsHidden != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(IsHidden);
      }
      if (FirstDayStartTime != 0) {
        output.WriteRawTag(216, 1);
        output.WriteUInt32(FirstDayStartTime);
      }
      if (detailCase_ == DetailOneofCase.DragonSpineInfo) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(DragonSpineInfo);
      }
      if (detailCase_ == DetailOneofCase.EffigyInfo) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(EffigyInfo);
      }
      if (detailCase_ == DetailOneofCase.TreasureMapInfo) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(TreasureMapInfo);
      }
      if (detailCase_ == DetailOneofCase.BlessingInfo) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(BlessingInfo);
      }
      if (detailCase_ == DetailOneofCase.SeaLampInfo) {
        output.WriteRawTag(210, 2);
        output.WriteMessage(SeaLampInfo);
      }
      if (detailCase_ == DetailOneofCase.ExpeditionInfo) {
        output.WriteRawTag(218, 2);
        output.WriteMessage(ExpeditionInfo);
      }
      if (detailCase_ == DetailOneofCase.ArenaChallengeInfo) {
        output.WriteRawTag(226, 2);
        output.WriteMessage(ArenaChallengeInfo);
      }
      if (detailCase_ == DetailOneofCase.FleurFairInfo) {
        output.WriteRawTag(154, 3);
        output.WriteMessage(FleurFairInfo);
      }
      if (detailCase_ == DetailOneofCase.WaterSpiritInfo) {
        output.WriteRawTag(162, 3);
        output.WriteMessage(WaterSpiritInfo);
      }
      if (detailCase_ == DetailOneofCase.ChallnelerSlabInfo) {
        output.WriteRawTag(234, 3);
        output.WriteMessage(ChallnelerSlabInfo);
      }
      if (detailCase_ == DetailOneofCase.MistTrialActivityInfo) {
        output.WriteRawTag(242, 3);
        output.WriteMessage(MistTrialActivityInfo);
      }
      if (detailCase_ == DetailOneofCase.HideAndSeekInfo) {
        output.WriteRawTag(250, 3);
        output.WriteMessage(HideAndSeekInfo);
      }
      if (detailCase_ == DetailOneofCase.FindHilichurlInfo) {
        output.WriteRawTag(130, 4);
        output.WriteMessage(FindHilichurlInfo);
      }
      if (detailCase_ == DetailOneofCase.SummerTimeInfo) {
        output.WriteRawTag(138, 4);
        output.WriteMessage(SummerTimeInfo);
      }
      if (detailCase_ == DetailOneofCase.BuoyantCombatInfo) {
        output.WriteRawTag(146, 4);
        output.WriteMessage(BuoyantCombatInfo);
      }
      if (detailCase_ == DetailOneofCase.EchoShellInfo) {
        output.WriteRawTag(154, 4);
        output.WriteMessage(EchoShellInfo);
      }
      if (detailCase_ == DetailOneofCase.BounceConjuringInfo) {
        output.WriteRawTag(162, 4);
        output.WriteMessage(BounceConjuringInfo);
      }
      if (detailCase_ == DetailOneofCase.BlitzRushInfo) {
        output.WriteRawTag(170, 4);
        output.WriteMessage(BlitzRushInfo);
      }
      if (detailCase_ == DetailOneofCase.ChessInfo) {
        output.WriteRawTag(178, 4);
        output.WriteMessage(ChessInfo);
      }
      if (detailCase_ == DetailOneofCase.SumoInfo) {
        output.WriteRawTag(186, 4);
        output.WriteMessage(SumoInfo);
      }
      if (detailCase_ == DetailOneofCase.MoonfinTrialInfo) {
        output.WriteRawTag(194, 4);
        output.WriteMessage(MoonfinTrialInfo);
      }
      if (detailCase_ == DetailOneofCase.LunaRiteInfo) {
        output.WriteRawTag(202, 4);
        output.WriteMessage(LunaRiteInfo);
      }
      if (detailCase_ == DetailOneofCase.PlantFlowerInfo) {
        output.WriteRawTag(210, 4);
        output.WriteMessage(PlantFlowerInfo);
      }
      if (detailCase_ == DetailOneofCase.MusicGameInfo) {
        output.WriteRawTag(218, 4);
        output.WriteMessage(MusicGameInfo);
      }
      if (detailCase_ == DetailOneofCase.RoguelikeDungoenInfo) {
        output.WriteRawTag(226, 4);
        output.WriteMessage(RoguelikeDungoenInfo);
      }
      if (detailCase_ == DetailOneofCase.DigInfo) {
        output.WriteRawTag(234, 4);
        output.WriteMessage(DigInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ActivityId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ActivityId);
      }
      if (ScheduleId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ScheduleId);
      }
      if (BeginTime != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(BeginTime);
      }
      if (EndTime != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(EndTime);
      }
      if (ActivityType != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ActivityType);
      }
      if (IsPlayOpenAnim != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsPlayOpenAnim);
      }
      if (IsFinished != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsFinished);
      }
      if (IsStarting != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsStarting);
      }
      watcherInfoList_.WriteTo(ref output, _repeated_watcherInfoList_codec);
      meetCondList_.WriteTo(ref output, _repeated_meetCondList_codec);
      if (detailCase_ == DetailOneofCase.SamLampInfo) {
        output.WriteRawTag(90);
        output.WriteMessage(SamLampInfo);
      }
      if (detailCase_ == DetailOneofCase.CrucibleInfo) {
        output.WriteRawTag(98);
        output.WriteMessage(CrucibleInfo);
      }
      if (detailCase_ == DetailOneofCase.SalesmanInfo) {
        output.WriteRawTag(106);
        output.WriteMessage(SalesmanInfo);
      }
      if (detailCase_ == DetailOneofCase.TrialAvatarInfo) {
        output.WriteRawTag(114);
        output.WriteMessage(TrialAvatarInfo);
      }
      expireCondList_.WriteTo(ref output, _repeated_expireCondList_codec);
      if (detailCase_ == DetailOneofCase.DeliveryInfo) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(DeliveryInfo);
      }
      if (SelectedAvatarRewardId != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(SelectedAvatarRewardId);
      }
      activityCoinMap_.WriteTo(ref output, _map_activityCoinMap_codec);
      if (ScoreLimit != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(ScoreLimit);
      }
      if (CurScore != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(CurScore);
      }
      if (detailCase_ == DetailOneofCase.AsterInfo) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(AsterInfo);
      }
      takenRewardList_.WriteTo(ref output, _repeated_takenRewardList_codec);
      if (detailCase_ == DetailOneofCase.FlightInfo) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(FlightInfo);
      }
      if (IsHidden != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(IsHidden);
      }
      if (FirstDayStartTime != 0) {
        output.WriteRawTag(216, 1);
        output.WriteUInt32(FirstDayStartTime);
      }
      if (detailCase_ == DetailOneofCase.DragonSpineInfo) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(DragonSpineInfo);
      }
      if (detailCase_ == DetailOneofCase.EffigyInfo) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(EffigyInfo);
      }
      if (detailCase_ == DetailOneofCase.TreasureMapInfo) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(TreasureMapInfo);
      }
      if (detailCase_ == DetailOneofCase.BlessingInfo) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(BlessingInfo);
      }
      if (detailCase_ == DetailOneofCase.SeaLampInfo) {
        output.WriteRawTag(210, 2);
        output.WriteMessage(SeaLampInfo);
      }
      if (detailCase_ == DetailOneofCase.ExpeditionInfo) {
        output.WriteRawTag(218, 2);
        output.WriteMessage(ExpeditionInfo);
      }
      if (detailCase_ == DetailOneofCase.ArenaChallengeInfo) {
        output.WriteRawTag(226, 2);
        output.WriteMessage(ArenaChallengeInfo);
      }
      if (detailCase_ == DetailOneofCase.FleurFairInfo) {
        output.WriteRawTag(154, 3);
        output.WriteMessage(FleurFairInfo);
      }
      if (detailCase_ == DetailOneofCase.WaterSpiritInfo) {
        output.WriteRawTag(162, 3);
        output.WriteMessage(WaterSpiritInfo);
      }
      if (detailCase_ == DetailOneofCase.ChallnelerSlabInfo) {
        output.WriteRawTag(234, 3);
        output.WriteMessage(ChallnelerSlabInfo);
      }
      if (detailCase_ == DetailOneofCase.MistTrialActivityInfo) {
        output.WriteRawTag(242, 3);
        output.WriteMessage(MistTrialActivityInfo);
      }
      if (detailCase_ == DetailOneofCase.HideAndSeekInfo) {
        output.WriteRawTag(250, 3);
        output.WriteMessage(HideAndSeekInfo);
      }
      if (detailCase_ == DetailOneofCase.FindHilichurlInfo) {
        output.WriteRawTag(130, 4);
        output.WriteMessage(FindHilichurlInfo);
      }
      if (detailCase_ == DetailOneofCase.SummerTimeInfo) {
        output.WriteRawTag(138, 4);
        output.WriteMessage(SummerTimeInfo);
      }
      if (detailCase_ == DetailOneofCase.BuoyantCombatInfo) {
        output.WriteRawTag(146, 4);
        output.WriteMessage(BuoyantCombatInfo);
      }
      if (detailCase_ == DetailOneofCase.EchoShellInfo) {
        output.WriteRawTag(154, 4);
        output.WriteMessage(EchoShellInfo);
      }
      if (detailCase_ == DetailOneofCase.BounceConjuringInfo) {
        output.WriteRawTag(162, 4);
        output.WriteMessage(BounceConjuringInfo);
      }
      if (detailCase_ == DetailOneofCase.BlitzRushInfo) {
        output.WriteRawTag(170, 4);
        output.WriteMessage(BlitzRushInfo);
      }
      if (detailCase_ == DetailOneofCase.ChessInfo) {
        output.WriteRawTag(178, 4);
        output.WriteMessage(ChessInfo);
      }
      if (detailCase_ == DetailOneofCase.SumoInfo) {
        output.WriteRawTag(186, 4);
        output.WriteMessage(SumoInfo);
      }
      if (detailCase_ == DetailOneofCase.MoonfinTrialInfo) {
        output.WriteRawTag(194, 4);
        output.WriteMessage(MoonfinTrialInfo);
      }
      if (detailCase_ == DetailOneofCase.LunaRiteInfo) {
        output.WriteRawTag(202, 4);
        output.WriteMessage(LunaRiteInfo);
      }
      if (detailCase_ == DetailOneofCase.PlantFlowerInfo) {
        output.WriteRawTag(210, 4);
        output.WriteMessage(PlantFlowerInfo);
      }
      if (detailCase_ == DetailOneofCase.MusicGameInfo) {
        output.WriteRawTag(218, 4);
        output.WriteMessage(MusicGameInfo);
      }
      if (detailCase_ == DetailOneofCase.RoguelikeDungoenInfo) {
        output.WriteRawTag(226, 4);
        output.WriteMessage(RoguelikeDungoenInfo);
      }
      if (detailCase_ == DetailOneofCase.DigInfo) {
        output.WriteRawTag(234, 4);
        output.WriteMessage(DigInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (detailCase_ == DetailOneofCase.SamLampInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SamLampInfo);
      }
      if (detailCase_ == DetailOneofCase.CrucibleInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CrucibleInfo);
      }
      if (detailCase_ == DetailOneofCase.SalesmanInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SalesmanInfo);
      }
      if (detailCase_ == DetailOneofCase.TrialAvatarInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrialAvatarInfo);
      }
      if (detailCase_ == DetailOneofCase.DeliveryInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeliveryInfo);
      }
      if (detailCase_ == DetailOneofCase.AsterInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AsterInfo);
      }
      if (detailCase_ == DetailOneofCase.FlightInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FlightInfo);
      }
      if (detailCase_ == DetailOneofCase.DragonSpineInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DragonSpineInfo);
      }
      if (detailCase_ == DetailOneofCase.EffigyInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EffigyInfo);
      }
      if (detailCase_ == DetailOneofCase.TreasureMapInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TreasureMapInfo);
      }
      if (detailCase_ == DetailOneofCase.BlessingInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BlessingInfo);
      }
      if (detailCase_ == DetailOneofCase.SeaLampInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SeaLampInfo);
      }
      if (detailCase_ == DetailOneofCase.ExpeditionInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ExpeditionInfo);
      }
      if (detailCase_ == DetailOneofCase.ArenaChallengeInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ArenaChallengeInfo);
      }
      if (detailCase_ == DetailOneofCase.FleurFairInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FleurFairInfo);
      }
      if (detailCase_ == DetailOneofCase.WaterSpiritInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(WaterSpiritInfo);
      }
      if (detailCase_ == DetailOneofCase.ChallnelerSlabInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ChallnelerSlabInfo);
      }
      if (detailCase_ == DetailOneofCase.MistTrialActivityInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MistTrialActivityInfo);
      }
      if (detailCase_ == DetailOneofCase.HideAndSeekInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(HideAndSeekInfo);
      }
      if (detailCase_ == DetailOneofCase.FindHilichurlInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FindHilichurlInfo);
      }
      if (detailCase_ == DetailOneofCase.SummerTimeInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SummerTimeInfo);
      }
      if (detailCase_ == DetailOneofCase.BuoyantCombatInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BuoyantCombatInfo);
      }
      if (detailCase_ == DetailOneofCase.EchoShellInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EchoShellInfo);
      }
      if (detailCase_ == DetailOneofCase.BounceConjuringInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BounceConjuringInfo);
      }
      if (detailCase_ == DetailOneofCase.BlitzRushInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BlitzRushInfo);
      }
      if (detailCase_ == DetailOneofCase.ChessInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ChessInfo);
      }
      if (detailCase_ == DetailOneofCase.SumoInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SumoInfo);
      }
      if (detailCase_ == DetailOneofCase.MoonfinTrialInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MoonfinTrialInfo);
      }
      if (detailCase_ == DetailOneofCase.LunaRiteInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LunaRiteInfo);
      }
      if (detailCase_ == DetailOneofCase.PlantFlowerInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PlantFlowerInfo);
      }
      if (detailCase_ == DetailOneofCase.MusicGameInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MusicGameInfo);
      }
      if (detailCase_ == DetailOneofCase.RoguelikeDungoenInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RoguelikeDungoenInfo);
      }
      if (detailCase_ == DetailOneofCase.DigInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DigInfo);
      }
      if (ActivityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActivityId);
      }
      if (ScheduleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ScheduleId);
      }
      if (BeginTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BeginTime);
      }
      if (EndTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EndTime);
      }
      if (ActivityType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActivityType);
      }
      if (IsPlayOpenAnim != false) {
        size += 1 + 1;
      }
      if (IsFinished != false) {
        size += 1 + 1;
      }
      if (IsStarting != false) {
        size += 1 + 1;
      }
      size += watcherInfoList_.CalculateSize(_repeated_watcherInfoList_codec);
      size += meetCondList_.CalculateSize(_repeated_meetCondList_codec);
      size += expireCondList_.CalculateSize(_repeated_expireCondList_codec);
      if (SelectedAvatarRewardId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SelectedAvatarRewardId);
      }
      size += activityCoinMap_.CalculateSize(_map_activityCoinMap_codec);
      if (ScoreLimit != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ScoreLimit);
      }
      if (CurScore != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CurScore);
      }
      size += takenRewardList_.CalculateSize(_repeated_takenRewardList_codec);
      if (IsHidden != false) {
        size += 2 + 1;
      }
      if (FirstDayStartTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(FirstDayStartTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActivityInfo other) {
      if (other == null) {
        return;
      }
      if (other.ActivityId != 0) {
        ActivityId = other.ActivityId;
      }
      if (other.ScheduleId != 0) {
        ScheduleId = other.ScheduleId;
      }
      if (other.BeginTime != 0) {
        BeginTime = other.BeginTime;
      }
      if (other.EndTime != 0) {
        EndTime = other.EndTime;
      }
      if (other.ActivityType != 0) {
        ActivityType = other.ActivityType;
      }
      if (other.IsPlayOpenAnim != false) {
        IsPlayOpenAnim = other.IsPlayOpenAnim;
      }
      if (other.IsFinished != false) {
        IsFinished = other.IsFinished;
      }
      if (other.IsStarting != false) {
        IsStarting = other.IsStarting;
      }
      watcherInfoList_.Add(other.watcherInfoList_);
      meetCondList_.Add(other.meetCondList_);
      expireCondList_.Add(other.expireCondList_);
      if (other.SelectedAvatarRewardId != 0) {
        SelectedAvatarRewardId = other.SelectedAvatarRewardId;
      }
      activityCoinMap_.Add(other.activityCoinMap_);
      if (other.ScoreLimit != 0) {
        ScoreLimit = other.ScoreLimit;
      }
      if (other.CurScore != 0) {
        CurScore = other.CurScore;
      }
      takenRewardList_.Add(other.takenRewardList_);
      if (other.IsHidden != false) {
        IsHidden = other.IsHidden;
      }
      if (other.FirstDayStartTime != 0) {
        FirstDayStartTime = other.FirstDayStartTime;
      }
      switch (other.DetailCase) {
        case DetailOneofCase.SamLampInfo:
          if (SamLampInfo == null) {
            SamLampInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          SamLampInfo.MergeFrom(other.SamLampInfo);
          break;
        case DetailOneofCase.CrucibleInfo:
          if (CrucibleInfo == null) {
            CrucibleInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          CrucibleInfo.MergeFrom(other.CrucibleInfo);
          break;
        case DetailOneofCase.SalesmanInfo:
          if (SalesmanInfo == null) {
            SalesmanInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          SalesmanInfo.MergeFrom(other.SalesmanInfo);
          break;
        case DetailOneofCase.TrialAvatarInfo:
          if (TrialAvatarInfo == null) {
            TrialAvatarInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          TrialAvatarInfo.MergeFrom(other.TrialAvatarInfo);
          break;
        case DetailOneofCase.DeliveryInfo:
          if (DeliveryInfo == null) {
            DeliveryInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          DeliveryInfo.MergeFrom(other.DeliveryInfo);
          break;
        case DetailOneofCase.AsterInfo:
          if (AsterInfo == null) {
            AsterInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          AsterInfo.MergeFrom(other.AsterInfo);
          break;
        case DetailOneofCase.FlightInfo:
          if (FlightInfo == null) {
            FlightInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          FlightInfo.MergeFrom(other.FlightInfo);
          break;
        case DetailOneofCase.DragonSpineInfo:
          if (DragonSpineInfo == null) {
            DragonSpineInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          DragonSpineInfo.MergeFrom(other.DragonSpineInfo);
          break;
        case DetailOneofCase.EffigyInfo:
          if (EffigyInfo == null) {
            EffigyInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          EffigyInfo.MergeFrom(other.EffigyInfo);
          break;
        case DetailOneofCase.TreasureMapInfo:
          if (TreasureMapInfo == null) {
            TreasureMapInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          TreasureMapInfo.MergeFrom(other.TreasureMapInfo);
          break;
        case DetailOneofCase.BlessingInfo:
          if (BlessingInfo == null) {
            BlessingInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          BlessingInfo.MergeFrom(other.BlessingInfo);
          break;
        case DetailOneofCase.SeaLampInfo:
          if (SeaLampInfo == null) {
            SeaLampInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          SeaLampInfo.MergeFrom(other.SeaLampInfo);
          break;
        case DetailOneofCase.ExpeditionInfo:
          if (ExpeditionInfo == null) {
            ExpeditionInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          ExpeditionInfo.MergeFrom(other.ExpeditionInfo);
          break;
        case DetailOneofCase.ArenaChallengeInfo:
          if (ArenaChallengeInfo == null) {
            ArenaChallengeInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          ArenaChallengeInfo.MergeFrom(other.ArenaChallengeInfo);
          break;
        case DetailOneofCase.FleurFairInfo:
          if (FleurFairInfo == null) {
            FleurFairInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          FleurFairInfo.MergeFrom(other.FleurFairInfo);
          break;
        case DetailOneofCase.WaterSpiritInfo:
          if (WaterSpiritInfo == null) {
            WaterSpiritInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          WaterSpiritInfo.MergeFrom(other.WaterSpiritInfo);
          break;
        case DetailOneofCase.ChallnelerSlabInfo:
          if (ChallnelerSlabInfo == null) {
            ChallnelerSlabInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          ChallnelerSlabInfo.MergeFrom(other.ChallnelerSlabInfo);
          break;
        case DetailOneofCase.MistTrialActivityInfo:
          if (MistTrialActivityInfo == null) {
            MistTrialActivityInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          MistTrialActivityInfo.MergeFrom(other.MistTrialActivityInfo);
          break;
        case DetailOneofCase.HideAndSeekInfo:
          if (HideAndSeekInfo == null) {
            HideAndSeekInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          HideAndSeekInfo.MergeFrom(other.HideAndSeekInfo);
          break;
        case DetailOneofCase.FindHilichurlInfo:
          if (FindHilichurlInfo == null) {
            FindHilichurlInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          FindHilichurlInfo.MergeFrom(other.FindHilichurlInfo);
          break;
        case DetailOneofCase.SummerTimeInfo:
          if (SummerTimeInfo == null) {
            SummerTimeInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          SummerTimeInfo.MergeFrom(other.SummerTimeInfo);
          break;
        case DetailOneofCase.BuoyantCombatInfo:
          if (BuoyantCombatInfo == null) {
            BuoyantCombatInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          BuoyantCombatInfo.MergeFrom(other.BuoyantCombatInfo);
          break;
        case DetailOneofCase.EchoShellInfo:
          if (EchoShellInfo == null) {
            EchoShellInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          EchoShellInfo.MergeFrom(other.EchoShellInfo);
          break;
        case DetailOneofCase.BounceConjuringInfo:
          if (BounceConjuringInfo == null) {
            BounceConjuringInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          BounceConjuringInfo.MergeFrom(other.BounceConjuringInfo);
          break;
        case DetailOneofCase.BlitzRushInfo:
          if (BlitzRushInfo == null) {
            BlitzRushInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          BlitzRushInfo.MergeFrom(other.BlitzRushInfo);
          break;
        case DetailOneofCase.ChessInfo:
          if (ChessInfo == null) {
            ChessInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          ChessInfo.MergeFrom(other.ChessInfo);
          break;
        case DetailOneofCase.SumoInfo:
          if (SumoInfo == null) {
            SumoInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          SumoInfo.MergeFrom(other.SumoInfo);
          break;
        case DetailOneofCase.MoonfinTrialInfo:
          if (MoonfinTrialInfo == null) {
            MoonfinTrialInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          MoonfinTrialInfo.MergeFrom(other.MoonfinTrialInfo);
          break;
        case DetailOneofCase.LunaRiteInfo:
          if (LunaRiteInfo == null) {
            LunaRiteInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          LunaRiteInfo.MergeFrom(other.LunaRiteInfo);
          break;
        case DetailOneofCase.PlantFlowerInfo:
          if (PlantFlowerInfo == null) {
            PlantFlowerInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          PlantFlowerInfo.MergeFrom(other.PlantFlowerInfo);
          break;
        case DetailOneofCase.MusicGameInfo:
          if (MusicGameInfo == null) {
            MusicGameInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          MusicGameInfo.MergeFrom(other.MusicGameInfo);
          break;
        case DetailOneofCase.RoguelikeDungoenInfo:
          if (RoguelikeDungoenInfo == null) {
            RoguelikeDungoenInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          RoguelikeDungoenInfo.MergeFrom(other.RoguelikeDungoenInfo);
          break;
        case DetailOneofCase.DigInfo:
          if (DigInfo == null) {
            DigInfo = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
          }
          DigInfo.MergeFrom(other.DigInfo);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActivityId = input.ReadUInt32();
            break;
          }
          case 16: {
            ScheduleId = input.ReadUInt32();
            break;
          }
          case 24: {
            BeginTime = input.ReadUInt32();
            break;
          }
          case 32: {
            EndTime = input.ReadUInt32();
            break;
          }
          case 40: {
            ActivityType = input.ReadUInt32();
            break;
          }
          case 48: {
            IsPlayOpenAnim = input.ReadBool();
            break;
          }
          case 56: {
            IsFinished = input.ReadBool();
            break;
          }
          case 64: {
            IsStarting = input.ReadBool();
            break;
          }
          case 74: {
            watcherInfoList_.AddEntriesFrom(input, _repeated_watcherInfoList_codec);
            break;
          }
          case 82:
          case 80: {
            meetCondList_.AddEntriesFrom(input, _repeated_meetCondList_codec);
            break;
          }
          case 90: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.SamLampInfo) {
              subBuilder.MergeFrom(SamLampInfo);
            }
            input.ReadMessage(subBuilder);
            SamLampInfo = subBuilder;
            break;
          }
          case 98: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.CrucibleInfo) {
              subBuilder.MergeFrom(CrucibleInfo);
            }
            input.ReadMessage(subBuilder);
            CrucibleInfo = subBuilder;
            break;
          }
          case 106: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.SalesmanInfo) {
              subBuilder.MergeFrom(SalesmanInfo);
            }
            input.ReadMessage(subBuilder);
            SalesmanInfo = subBuilder;
            break;
          }
          case 114: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.TrialAvatarInfo) {
              subBuilder.MergeFrom(TrialAvatarInfo);
            }
            input.ReadMessage(subBuilder);
            TrialAvatarInfo = subBuilder;
            break;
          }
          case 122:
          case 120: {
            expireCondList_.AddEntriesFrom(input, _repeated_expireCondList_codec);
            break;
          }
          case 130: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.DeliveryInfo) {
              subBuilder.MergeFrom(DeliveryInfo);
            }
            input.ReadMessage(subBuilder);
            DeliveryInfo = subBuilder;
            break;
          }
          case 136: {
            SelectedAvatarRewardId = input.ReadUInt32();
            break;
          }
          case 146: {
            activityCoinMap_.AddEntriesFrom(input, _map_activityCoinMap_codec);
            break;
          }
          case 152: {
            ScoreLimit = input.ReadUInt32();
            break;
          }
          case 160: {
            CurScore = input.ReadUInt32();
            break;
          }
          case 170: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.AsterInfo) {
              subBuilder.MergeFrom(AsterInfo);
            }
            input.ReadMessage(subBuilder);
            AsterInfo = subBuilder;
            break;
          }
          case 194:
          case 192: {
            takenRewardList_.AddEntriesFrom(input, _repeated_takenRewardList_codec);
            break;
          }
          case 202: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.FlightInfo) {
              subBuilder.MergeFrom(FlightInfo);
            }
            input.ReadMessage(subBuilder);
            FlightInfo = subBuilder;
            break;
          }
          case 208: {
            IsHidden = input.ReadBool();
            break;
          }
          case 216: {
            FirstDayStartTime = input.ReadUInt32();
            break;
          }
          case 250: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.DragonSpineInfo) {
              subBuilder.MergeFrom(DragonSpineInfo);
            }
            input.ReadMessage(subBuilder);
            DragonSpineInfo = subBuilder;
            break;
          }
          case 258: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.EffigyInfo) {
              subBuilder.MergeFrom(EffigyInfo);
            }
            input.ReadMessage(subBuilder);
            EffigyInfo = subBuilder;
            break;
          }
          case 282: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.TreasureMapInfo) {
              subBuilder.MergeFrom(TreasureMapInfo);
            }
            input.ReadMessage(subBuilder);
            TreasureMapInfo = subBuilder;
            break;
          }
          case 330: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.BlessingInfo) {
              subBuilder.MergeFrom(BlessingInfo);
            }
            input.ReadMessage(subBuilder);
            BlessingInfo = subBuilder;
            break;
          }
          case 338: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.SeaLampInfo) {
              subBuilder.MergeFrom(SeaLampInfo);
            }
            input.ReadMessage(subBuilder);
            SeaLampInfo = subBuilder;
            break;
          }
          case 346: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.ExpeditionInfo) {
              subBuilder.MergeFrom(ExpeditionInfo);
            }
            input.ReadMessage(subBuilder);
            ExpeditionInfo = subBuilder;
            break;
          }
          case 354: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.ArenaChallengeInfo) {
              subBuilder.MergeFrom(ArenaChallengeInfo);
            }
            input.ReadMessage(subBuilder);
            ArenaChallengeInfo = subBuilder;
            break;
          }
          case 410: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.FleurFairInfo) {
              subBuilder.MergeFrom(FleurFairInfo);
            }
            input.ReadMessage(subBuilder);
            FleurFairInfo = subBuilder;
            break;
          }
          case 418: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.WaterSpiritInfo) {
              subBuilder.MergeFrom(WaterSpiritInfo);
            }
            input.ReadMessage(subBuilder);
            WaterSpiritInfo = subBuilder;
            break;
          }
          case 490: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.ChallnelerSlabInfo) {
              subBuilder.MergeFrom(ChallnelerSlabInfo);
            }
            input.ReadMessage(subBuilder);
            ChallnelerSlabInfo = subBuilder;
            break;
          }
          case 498: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.MistTrialActivityInfo) {
              subBuilder.MergeFrom(MistTrialActivityInfo);
            }
            input.ReadMessage(subBuilder);
            MistTrialActivityInfo = subBuilder;
            break;
          }
          case 506: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.HideAndSeekInfo) {
              subBuilder.MergeFrom(HideAndSeekInfo);
            }
            input.ReadMessage(subBuilder);
            HideAndSeekInfo = subBuilder;
            break;
          }
          case 514: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.FindHilichurlInfo) {
              subBuilder.MergeFrom(FindHilichurlInfo);
            }
            input.ReadMessage(subBuilder);
            FindHilichurlInfo = subBuilder;
            break;
          }
          case 522: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.SummerTimeInfo) {
              subBuilder.MergeFrom(SummerTimeInfo);
            }
            input.ReadMessage(subBuilder);
            SummerTimeInfo = subBuilder;
            break;
          }
          case 530: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.BuoyantCombatInfo) {
              subBuilder.MergeFrom(BuoyantCombatInfo);
            }
            input.ReadMessage(subBuilder);
            BuoyantCombatInfo = subBuilder;
            break;
          }
          case 538: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.EchoShellInfo) {
              subBuilder.MergeFrom(EchoShellInfo);
            }
            input.ReadMessage(subBuilder);
            EchoShellInfo = subBuilder;
            break;
          }
          case 546: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.BounceConjuringInfo) {
              subBuilder.MergeFrom(BounceConjuringInfo);
            }
            input.ReadMessage(subBuilder);
            BounceConjuringInfo = subBuilder;
            break;
          }
          case 554: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.BlitzRushInfo) {
              subBuilder.MergeFrom(BlitzRushInfo);
            }
            input.ReadMessage(subBuilder);
            BlitzRushInfo = subBuilder;
            break;
          }
          case 562: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.ChessInfo) {
              subBuilder.MergeFrom(ChessInfo);
            }
            input.ReadMessage(subBuilder);
            ChessInfo = subBuilder;
            break;
          }
          case 570: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.SumoInfo) {
              subBuilder.MergeFrom(SumoInfo);
            }
            input.ReadMessage(subBuilder);
            SumoInfo = subBuilder;
            break;
          }
          case 578: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.MoonfinTrialInfo) {
              subBuilder.MergeFrom(MoonfinTrialInfo);
            }
            input.ReadMessage(subBuilder);
            MoonfinTrialInfo = subBuilder;
            break;
          }
          case 586: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.LunaRiteInfo) {
              subBuilder.MergeFrom(LunaRiteInfo);
            }
            input.ReadMessage(subBuilder);
            LunaRiteInfo = subBuilder;
            break;
          }
          case 594: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.PlantFlowerInfo) {
              subBuilder.MergeFrom(PlantFlowerInfo);
            }
            input.ReadMessage(subBuilder);
            PlantFlowerInfo = subBuilder;
            break;
          }
          case 602: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.MusicGameInfo) {
              subBuilder.MergeFrom(MusicGameInfo);
            }
            input.ReadMessage(subBuilder);
            MusicGameInfo = subBuilder;
            break;
          }
          case 610: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.RoguelikeDungoenInfo) {
              subBuilder.MergeFrom(RoguelikeDungoenInfo);
            }
            input.ReadMessage(subBuilder);
            RoguelikeDungoenInfo = subBuilder;
            break;
          }
          case 618: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.DigInfo) {
              subBuilder.MergeFrom(DigInfo);
            }
            input.ReadMessage(subBuilder);
            DigInfo = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ActivityId = input.ReadUInt32();
            break;
          }
          case 16: {
            ScheduleId = input.ReadUInt32();
            break;
          }
          case 24: {
            BeginTime = input.ReadUInt32();
            break;
          }
          case 32: {
            EndTime = input.ReadUInt32();
            break;
          }
          case 40: {
            ActivityType = input.ReadUInt32();
            break;
          }
          case 48: {
            IsPlayOpenAnim = input.ReadBool();
            break;
          }
          case 56: {
            IsFinished = input.ReadBool();
            break;
          }
          case 64: {
            IsStarting = input.ReadBool();
            break;
          }
          case 74: {
            watcherInfoList_.AddEntriesFrom(ref input, _repeated_watcherInfoList_codec);
            break;
          }
          case 82:
          case 80: {
            meetCondList_.AddEntriesFrom(ref input, _repeated_meetCondList_codec);
            break;
          }
          case 90: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.SamLampInfo) {
              subBuilder.MergeFrom(SamLampInfo);
            }
            input.ReadMessage(subBuilder);
            SamLampInfo = subBuilder;
            break;
          }
          case 98: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.CrucibleInfo) {
              subBuilder.MergeFrom(CrucibleInfo);
            }
            input.ReadMessage(subBuilder);
            CrucibleInfo = subBuilder;
            break;
          }
          case 106: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.SalesmanInfo) {
              subBuilder.MergeFrom(SalesmanInfo);
            }
            input.ReadMessage(subBuilder);
            SalesmanInfo = subBuilder;
            break;
          }
          case 114: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.TrialAvatarInfo) {
              subBuilder.MergeFrom(TrialAvatarInfo);
            }
            input.ReadMessage(subBuilder);
            TrialAvatarInfo = subBuilder;
            break;
          }
          case 122:
          case 120: {
            expireCondList_.AddEntriesFrom(ref input, _repeated_expireCondList_codec);
            break;
          }
          case 130: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.DeliveryInfo) {
              subBuilder.MergeFrom(DeliveryInfo);
            }
            input.ReadMessage(subBuilder);
            DeliveryInfo = subBuilder;
            break;
          }
          case 136: {
            SelectedAvatarRewardId = input.ReadUInt32();
            break;
          }
          case 146: {
            activityCoinMap_.AddEntriesFrom(ref input, _map_activityCoinMap_codec);
            break;
          }
          case 152: {
            ScoreLimit = input.ReadUInt32();
            break;
          }
          case 160: {
            CurScore = input.ReadUInt32();
            break;
          }
          case 170: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.AsterInfo) {
              subBuilder.MergeFrom(AsterInfo);
            }
            input.ReadMessage(subBuilder);
            AsterInfo = subBuilder;
            break;
          }
          case 194:
          case 192: {
            takenRewardList_.AddEntriesFrom(ref input, _repeated_takenRewardList_codec);
            break;
          }
          case 202: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.FlightInfo) {
              subBuilder.MergeFrom(FlightInfo);
            }
            input.ReadMessage(subBuilder);
            FlightInfo = subBuilder;
            break;
          }
          case 208: {
            IsHidden = input.ReadBool();
            break;
          }
          case 216: {
            FirstDayStartTime = input.ReadUInt32();
            break;
          }
          case 250: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.DragonSpineInfo) {
              subBuilder.MergeFrom(DragonSpineInfo);
            }
            input.ReadMessage(subBuilder);
            DragonSpineInfo = subBuilder;
            break;
          }
          case 258: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.EffigyInfo) {
              subBuilder.MergeFrom(EffigyInfo);
            }
            input.ReadMessage(subBuilder);
            EffigyInfo = subBuilder;
            break;
          }
          case 282: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.TreasureMapInfo) {
              subBuilder.MergeFrom(TreasureMapInfo);
            }
            input.ReadMessage(subBuilder);
            TreasureMapInfo = subBuilder;
            break;
          }
          case 330: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.BlessingInfo) {
              subBuilder.MergeFrom(BlessingInfo);
            }
            input.ReadMessage(subBuilder);
            BlessingInfo = subBuilder;
            break;
          }
          case 338: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.SeaLampInfo) {
              subBuilder.MergeFrom(SeaLampInfo);
            }
            input.ReadMessage(subBuilder);
            SeaLampInfo = subBuilder;
            break;
          }
          case 346: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.ExpeditionInfo) {
              subBuilder.MergeFrom(ExpeditionInfo);
            }
            input.ReadMessage(subBuilder);
            ExpeditionInfo = subBuilder;
            break;
          }
          case 354: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.ArenaChallengeInfo) {
              subBuilder.MergeFrom(ArenaChallengeInfo);
            }
            input.ReadMessage(subBuilder);
            ArenaChallengeInfo = subBuilder;
            break;
          }
          case 410: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.FleurFairInfo) {
              subBuilder.MergeFrom(FleurFairInfo);
            }
            input.ReadMessage(subBuilder);
            FleurFairInfo = subBuilder;
            break;
          }
          case 418: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.WaterSpiritInfo) {
              subBuilder.MergeFrom(WaterSpiritInfo);
            }
            input.ReadMessage(subBuilder);
            WaterSpiritInfo = subBuilder;
            break;
          }
          case 490: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.ChallnelerSlabInfo) {
              subBuilder.MergeFrom(ChallnelerSlabInfo);
            }
            input.ReadMessage(subBuilder);
            ChallnelerSlabInfo = subBuilder;
            break;
          }
          case 498: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.MistTrialActivityInfo) {
              subBuilder.MergeFrom(MistTrialActivityInfo);
            }
            input.ReadMessage(subBuilder);
            MistTrialActivityInfo = subBuilder;
            break;
          }
          case 506: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.HideAndSeekInfo) {
              subBuilder.MergeFrom(HideAndSeekInfo);
            }
            input.ReadMessage(subBuilder);
            HideAndSeekInfo = subBuilder;
            break;
          }
          case 514: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.FindHilichurlInfo) {
              subBuilder.MergeFrom(FindHilichurlInfo);
            }
            input.ReadMessage(subBuilder);
            FindHilichurlInfo = subBuilder;
            break;
          }
          case 522: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.SummerTimeInfo) {
              subBuilder.MergeFrom(SummerTimeInfo);
            }
            input.ReadMessage(subBuilder);
            SummerTimeInfo = subBuilder;
            break;
          }
          case 530: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.BuoyantCombatInfo) {
              subBuilder.MergeFrom(BuoyantCombatInfo);
            }
            input.ReadMessage(subBuilder);
            BuoyantCombatInfo = subBuilder;
            break;
          }
          case 538: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.EchoShellInfo) {
              subBuilder.MergeFrom(EchoShellInfo);
            }
            input.ReadMessage(subBuilder);
            EchoShellInfo = subBuilder;
            break;
          }
          case 546: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.BounceConjuringInfo) {
              subBuilder.MergeFrom(BounceConjuringInfo);
            }
            input.ReadMessage(subBuilder);
            BounceConjuringInfo = subBuilder;
            break;
          }
          case 554: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.BlitzRushInfo) {
              subBuilder.MergeFrom(BlitzRushInfo);
            }
            input.ReadMessage(subBuilder);
            BlitzRushInfo = subBuilder;
            break;
          }
          case 562: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.ChessInfo) {
              subBuilder.MergeFrom(ChessInfo);
            }
            input.ReadMessage(subBuilder);
            ChessInfo = subBuilder;
            break;
          }
          case 570: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.SumoInfo) {
              subBuilder.MergeFrom(SumoInfo);
            }
            input.ReadMessage(subBuilder);
            SumoInfo = subBuilder;
            break;
          }
          case 578: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.MoonfinTrialInfo) {
              subBuilder.MergeFrom(MoonfinTrialInfo);
            }
            input.ReadMessage(subBuilder);
            MoonfinTrialInfo = subBuilder;
            break;
          }
          case 586: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.LunaRiteInfo) {
              subBuilder.MergeFrom(LunaRiteInfo);
            }
            input.ReadMessage(subBuilder);
            LunaRiteInfo = subBuilder;
            break;
          }
          case 594: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.PlantFlowerInfo) {
              subBuilder.MergeFrom(PlantFlowerInfo);
            }
            input.ReadMessage(subBuilder);
            PlantFlowerInfo = subBuilder;
            break;
          }
          case 602: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.MusicGameInfo) {
              subBuilder.MergeFrom(MusicGameInfo);
            }
            input.ReadMessage(subBuilder);
            MusicGameInfo = subBuilder;
            break;
          }
          case 610: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.RoguelikeDungoenInfo) {
              subBuilder.MergeFrom(RoguelikeDungoenInfo);
            }
            input.ReadMessage(subBuilder);
            RoguelikeDungoenInfo = subBuilder;
            break;
          }
          case 618: {
            global::Lemonade.Net.Protocol.ActivityNullDetailInfo subBuilder = new global::Lemonade.Net.Protocol.ActivityNullDetailInfo();
            if (detailCase_ == DetailOneofCase.DigInfo) {
              subBuilder.MergeFrom(DigInfo);
            }
            input.ReadMessage(subBuilder);
            DigInfo = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
