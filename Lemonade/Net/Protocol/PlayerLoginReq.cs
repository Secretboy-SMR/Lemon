// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PlayerLoginReq.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Lemonade.Net.Protocol {

  /// <summary>Holder for reflection information generated from PlayerLoginReq.proto</summary>
  public static partial class PlayerLoginReqReflection {

    #region Descriptor
    /// <summary>File descriptor for PlayerLoginReq.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerLoginReqReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRQbGF5ZXJMb2dpblJlcS5wcm90bxoUVHJhY2tpbmdJT0luZm8ucHJvdG8a",
            "GEFkanVzdFRyYWNraW5nSW5mby5wcm90byLsBwoOUGxheWVyTG9naW5SZXES",
            "DQoFdG9rZW4YASABKAkSFgoOY2xpZW50X3ZlcnNpb24YAiABKAkSFgoOc3lz",
            "dGVtX3ZlcnNpb24YAyABKAkSEwoLZGV2aWNlX25hbWUYBCABKAkSEwoLZGV2",
            "aWNlX3V1aWQYBSABKAkSEgoKdGFyZ2V0X3VpZBgGIAEoDRISCgpsb2dpbl9y",
            "YW5kGAcgASgEEhEKCWlzX2VkaXRvchgIIAEoCBIVCg1sYW5ndWFnZV90eXBl",
            "GAkgASgNEhQKDGFjY291bnRfdHlwZRgKIAEoDRITCgthY2NvdW50X3VpZBgL",
            "IAEoCRIQCghwbGF0Zm9ybRgMIAEoCRITCgtkZXZpY2VfaW5mbxgNIAEoCRIV",
            "Cg1wbGF0Zm9ybV90eXBlGA4gASgNEhAKCGlzX2d1ZXN0GA8gASgIEhcKD2Ns",
            "b3VkX2NsaWVudF9pcBgQIAEoDRIOCgZnbV91aWQYESABKA0SEAoIY2hlY2tz",
            "dW0YEiABKAkSEQoJb25saW5lX2lkGBMgASgJEhQKDGNsaWVudF90b2tlbhgU",
            "IAEoDRIaChJzZWN1cml0eV9jbWRfcmVwbHkYFSABKAwSFgoOZXh0cmFfYmlu",
            "X2RhdGEYFiABKAwSCwoDY3BzGBcgASgJEhIKCmNoYW5uZWxfaWQYGCABKA0S",
            "FgoOc3ViX2NoYW5uZWxfaWQYGSABKA0SHwoXY2hlY2tzdW1fY2xpZW50X3Zl",
            "cnNpb24YGiABKAkSCwoDdGFnGBsgASgNEikKEHRyYWNraW5nX2lvX2luZm8Y",
            "HCABKAsyDy5UcmFja2luZ0lPSW5mbxIUCgxjb3VudHJ5X2NvZGUYHSABKAkS",
            "GwoTY2xpZW50X2RhdGFfdmVyc2lvbhgeIAEoDRIeChZlbnZpcm9ubWVudF9l",
            "cnJvcl9jb2RlGB8gASgMEh0KFXRhcmdldF9ob21lX293bmVyX3VpZBggIAEo",
            "DRIOCgZwc25faWQYISABKAkSGwoTY2xpZW50X3Zlcmlzb25faGFzaBgiIAEo",
            "CRITCgtpc190cmFuc2ZlchgjIAEoCBIUCgxyZWdfcGxhdGZvcm0YJCABKA0S",
            "GQoRdGFyZ2V0X2hvbWVfcGFyYW0YJSABKA0SMQoUYWRqdXN0X3RyYWNraW5n",
            "X2luZm8YJiABKAsyEy5BZGp1c3RUcmFja2luZ0luZm8iYgoFQ21kSWQSEwoP",
            "RU5FVF9DSEFOTkVMX0lEEAASCAoETk9ORRAAEhQKEEVORVRfSVNfUkVMSUFC",
            "TEUQARITCg9JU19BTExPV19DTElFTlQQARILCgZDTURfSUQQvQEaAhABQhiq",
            "AhVMZW1vbmFkZS5OZXQuUHJvdG9jb2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Lemonade.Net.Protocol.TrackingIOInfoReflection.Descriptor, global::Lemonade.Net.Protocol.AdjustTrackingInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Lemonade.Net.Protocol.PlayerLoginReq), global::Lemonade.Net.Protocol.PlayerLoginReq.Parser, new[]{ "Token", "ClientVersion", "SystemVersion", "DeviceName", "DeviceUuid", "TargetUid", "LoginRand", "IsEditor", "LanguageType", "AccountType", "AccountUid", "Platform", "DeviceInfo", "PlatformType", "IsGuest", "CloudClientIp", "GmUid", "Checksum", "OnlineId", "ClientToken", "SecurityCmdReply", "ExtraBinData", "Cps", "ChannelId", "SubChannelId", "ChecksumClientVersion", "Tag", "TrackingIoInfo", "CountryCode", "ClientDataVersion", "EnvironmentErrorCode", "TargetHomeOwnerUid", "PsnId", "ClientVerisonHash", "IsTransfer", "RegPlatform", "TargetHomeParam", "AdjustTrackingInfo" }, null, new[]{ typeof(global::Lemonade.Net.Protocol.PlayerLoginReq.Types.CmdId) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PlayerLoginReq : pb::IMessage<PlayerLoginReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerLoginReq> _parser = new pb::MessageParser<PlayerLoginReq>(() => new PlayerLoginReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerLoginReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Lemonade.Net.Protocol.PlayerLoginReqReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerLoginReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerLoginReq(PlayerLoginReq other) : this() {
      token_ = other.token_;
      clientVersion_ = other.clientVersion_;
      systemVersion_ = other.systemVersion_;
      deviceName_ = other.deviceName_;
      deviceUuid_ = other.deviceUuid_;
      targetUid_ = other.targetUid_;
      loginRand_ = other.loginRand_;
      isEditor_ = other.isEditor_;
      languageType_ = other.languageType_;
      accountType_ = other.accountType_;
      accountUid_ = other.accountUid_;
      platform_ = other.platform_;
      deviceInfo_ = other.deviceInfo_;
      platformType_ = other.platformType_;
      isGuest_ = other.isGuest_;
      cloudClientIp_ = other.cloudClientIp_;
      gmUid_ = other.gmUid_;
      checksum_ = other.checksum_;
      onlineId_ = other.onlineId_;
      clientToken_ = other.clientToken_;
      securityCmdReply_ = other.securityCmdReply_;
      extraBinData_ = other.extraBinData_;
      cps_ = other.cps_;
      channelId_ = other.channelId_;
      subChannelId_ = other.subChannelId_;
      checksumClientVersion_ = other.checksumClientVersion_;
      tag_ = other.tag_;
      trackingIoInfo_ = other.trackingIoInfo_ != null ? other.trackingIoInfo_.Clone() : null;
      countryCode_ = other.countryCode_;
      clientDataVersion_ = other.clientDataVersion_;
      environmentErrorCode_ = other.environmentErrorCode_;
      targetHomeOwnerUid_ = other.targetHomeOwnerUid_;
      psnId_ = other.psnId_;
      clientVerisonHash_ = other.clientVerisonHash_;
      isTransfer_ = other.isTransfer_;
      regPlatform_ = other.regPlatform_;
      targetHomeParam_ = other.targetHomeParam_;
      adjustTrackingInfo_ = other.adjustTrackingInfo_ != null ? other.adjustTrackingInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerLoginReq Clone() {
      return new PlayerLoginReq(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_version" field.</summary>
    public const int ClientVersionFieldNumber = 2;
    private string clientVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientVersion {
      get { return clientVersion_; }
      set {
        clientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "system_version" field.</summary>
    public const int SystemVersionFieldNumber = 3;
    private string systemVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SystemVersion {
      get { return systemVersion_; }
      set {
        systemVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_name" field.</summary>
    public const int DeviceNameFieldNumber = 4;
    private string deviceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceName {
      get { return deviceName_; }
      set {
        deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_uuid" field.</summary>
    public const int DeviceUuidFieldNumber = 5;
    private string deviceUuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceUuid {
      get { return deviceUuid_; }
      set {
        deviceUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_uid" field.</summary>
    public const int TargetUidFieldNumber = 6;
    private uint targetUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetUid {
      get { return targetUid_; }
      set {
        targetUid_ = value;
      }
    }

    /// <summary>Field number for the "login_rand" field.</summary>
    public const int LoginRandFieldNumber = 7;
    private ulong loginRand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong LoginRand {
      get { return loginRand_; }
      set {
        loginRand_ = value;
      }
    }

    /// <summary>Field number for the "is_editor" field.</summary>
    public const int IsEditorFieldNumber = 8;
    private bool isEditor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsEditor {
      get { return isEditor_; }
      set {
        isEditor_ = value;
      }
    }

    /// <summary>Field number for the "language_type" field.</summary>
    public const int LanguageTypeFieldNumber = 9;
    private uint languageType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LanguageType {
      get { return languageType_; }
      set {
        languageType_ = value;
      }
    }

    /// <summary>Field number for the "account_type" field.</summary>
    public const int AccountTypeFieldNumber = 10;
    private uint accountType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AccountType {
      get { return accountType_; }
      set {
        accountType_ = value;
      }
    }

    /// <summary>Field number for the "account_uid" field.</summary>
    public const int AccountUidFieldNumber = 11;
    private string accountUid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AccountUid {
      get { return accountUid_; }
      set {
        accountUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 12;
    private string platform_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Platform {
      get { return platform_; }
      set {
        platform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_info" field.</summary>
    public const int DeviceInfoFieldNumber = 13;
    private string deviceInfo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceInfo {
      get { return deviceInfo_; }
      set {
        deviceInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "platform_type" field.</summary>
    public const int PlatformTypeFieldNumber = 14;
    private uint platformType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlatformType {
      get { return platformType_; }
      set {
        platformType_ = value;
      }
    }

    /// <summary>Field number for the "is_guest" field.</summary>
    public const int IsGuestFieldNumber = 15;
    private bool isGuest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsGuest {
      get { return isGuest_; }
      set {
        isGuest_ = value;
      }
    }

    /// <summary>Field number for the "cloud_client_ip" field.</summary>
    public const int CloudClientIpFieldNumber = 16;
    private uint cloudClientIp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CloudClientIp {
      get { return cloudClientIp_; }
      set {
        cloudClientIp_ = value;
      }
    }

    /// <summary>Field number for the "gm_uid" field.</summary>
    public const int GmUidFieldNumber = 17;
    private uint gmUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GmUid {
      get { return gmUid_; }
      set {
        gmUid_ = value;
      }
    }

    /// <summary>Field number for the "checksum" field.</summary>
    public const int ChecksumFieldNumber = 18;
    private string checksum_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Checksum {
      get { return checksum_; }
      set {
        checksum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "online_id" field.</summary>
    public const int OnlineIdFieldNumber = 19;
    private string onlineId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OnlineId {
      get { return onlineId_; }
      set {
        onlineId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_token" field.</summary>
    public const int ClientTokenFieldNumber = 20;
    private uint clientToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ClientToken {
      get { return clientToken_; }
      set {
        clientToken_ = value;
      }
    }

    /// <summary>Field number for the "security_cmd_reply" field.</summary>
    public const int SecurityCmdReplyFieldNumber = 21;
    private pb::ByteString securityCmdReply_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString SecurityCmdReply {
      get { return securityCmdReply_; }
      set {
        securityCmdReply_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extra_bin_data" field.</summary>
    public const int ExtraBinDataFieldNumber = 22;
    private pb::ByteString extraBinData_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ExtraBinData {
      get { return extraBinData_; }
      set {
        extraBinData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cps" field.</summary>
    public const int CpsFieldNumber = 23;
    private string cps_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Cps {
      get { return cps_; }
      set {
        cps_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 24;
    private uint channelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "sub_channel_id" field.</summary>
    public const int SubChannelIdFieldNumber = 25;
    private uint subChannelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SubChannelId {
      get { return subChannelId_; }
      set {
        subChannelId_ = value;
      }
    }

    /// <summary>Field number for the "checksum_client_version" field.</summary>
    public const int ChecksumClientVersionFieldNumber = 26;
    private string checksumClientVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ChecksumClientVersion {
      get { return checksumClientVersion_; }
      set {
        checksumClientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 27;
    private uint tag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Tag {
      get { return tag_; }
      set {
        tag_ = value;
      }
    }

    /// <summary>Field number for the "tracking_io_info" field.</summary>
    public const int TrackingIoInfoFieldNumber = 28;
    private global::Lemonade.Net.Protocol.TrackingIOInfo trackingIoInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.TrackingIOInfo TrackingIoInfo {
      get { return trackingIoInfo_; }
      set {
        trackingIoInfo_ = value;
      }
    }

    /// <summary>Field number for the "country_code" field.</summary>
    public const int CountryCodeFieldNumber = 29;
    private string countryCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CountryCode {
      get { return countryCode_; }
      set {
        countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_data_version" field.</summary>
    public const int ClientDataVersionFieldNumber = 30;
    private uint clientDataVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ClientDataVersion {
      get { return clientDataVersion_; }
      set {
        clientDataVersion_ = value;
      }
    }

    /// <summary>Field number for the "environment_error_code" field.</summary>
    public const int EnvironmentErrorCodeFieldNumber = 31;
    private pb::ByteString environmentErrorCode_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString EnvironmentErrorCode {
      get { return environmentErrorCode_; }
      set {
        environmentErrorCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_home_owner_uid" field.</summary>
    public const int TargetHomeOwnerUidFieldNumber = 32;
    private uint targetHomeOwnerUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetHomeOwnerUid {
      get { return targetHomeOwnerUid_; }
      set {
        targetHomeOwnerUid_ = value;
      }
    }

    /// <summary>Field number for the "psn_id" field.</summary>
    public const int PsnIdFieldNumber = 33;
    private string psnId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PsnId {
      get { return psnId_; }
      set {
        psnId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_verison_hash" field.</summary>
    public const int ClientVerisonHashFieldNumber = 34;
    private string clientVerisonHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientVerisonHash {
      get { return clientVerisonHash_; }
      set {
        clientVerisonHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_transfer" field.</summary>
    public const int IsTransferFieldNumber = 35;
    private bool isTransfer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsTransfer {
      get { return isTransfer_; }
      set {
        isTransfer_ = value;
      }
    }

    /// <summary>Field number for the "reg_platform" field.</summary>
    public const int RegPlatformFieldNumber = 36;
    private uint regPlatform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RegPlatform {
      get { return regPlatform_; }
      set {
        regPlatform_ = value;
      }
    }

    /// <summary>Field number for the "target_home_param" field.</summary>
    public const int TargetHomeParamFieldNumber = 37;
    private uint targetHomeParam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetHomeParam {
      get { return targetHomeParam_; }
      set {
        targetHomeParam_ = value;
      }
    }

    /// <summary>Field number for the "adjust_tracking_info" field.</summary>
    public const int AdjustTrackingInfoFieldNumber = 38;
    private global::Lemonade.Net.Protocol.AdjustTrackingInfo adjustTrackingInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lemonade.Net.Protocol.AdjustTrackingInfo AdjustTrackingInfo {
      get { return adjustTrackingInfo_; }
      set {
        adjustTrackingInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerLoginReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerLoginReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (ClientVersion != other.ClientVersion) return false;
      if (SystemVersion != other.SystemVersion) return false;
      if (DeviceName != other.DeviceName) return false;
      if (DeviceUuid != other.DeviceUuid) return false;
      if (TargetUid != other.TargetUid) return false;
      if (LoginRand != other.LoginRand) return false;
      if (IsEditor != other.IsEditor) return false;
      if (LanguageType != other.LanguageType) return false;
      if (AccountType != other.AccountType) return false;
      if (AccountUid != other.AccountUid) return false;
      if (Platform != other.Platform) return false;
      if (DeviceInfo != other.DeviceInfo) return false;
      if (PlatformType != other.PlatformType) return false;
      if (IsGuest != other.IsGuest) return false;
      if (CloudClientIp != other.CloudClientIp) return false;
      if (GmUid != other.GmUid) return false;
      if (Checksum != other.Checksum) return false;
      if (OnlineId != other.OnlineId) return false;
      if (ClientToken != other.ClientToken) return false;
      if (SecurityCmdReply != other.SecurityCmdReply) return false;
      if (ExtraBinData != other.ExtraBinData) return false;
      if (Cps != other.Cps) return false;
      if (ChannelId != other.ChannelId) return false;
      if (SubChannelId != other.SubChannelId) return false;
      if (ChecksumClientVersion != other.ChecksumClientVersion) return false;
      if (Tag != other.Tag) return false;
      if (!object.Equals(TrackingIoInfo, other.TrackingIoInfo)) return false;
      if (CountryCode != other.CountryCode) return false;
      if (ClientDataVersion != other.ClientDataVersion) return false;
      if (EnvironmentErrorCode != other.EnvironmentErrorCode) return false;
      if (TargetHomeOwnerUid != other.TargetHomeOwnerUid) return false;
      if (PsnId != other.PsnId) return false;
      if (ClientVerisonHash != other.ClientVerisonHash) return false;
      if (IsTransfer != other.IsTransfer) return false;
      if (RegPlatform != other.RegPlatform) return false;
      if (TargetHomeParam != other.TargetHomeParam) return false;
      if (!object.Equals(AdjustTrackingInfo, other.AdjustTrackingInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (ClientVersion.Length != 0) hash ^= ClientVersion.GetHashCode();
      if (SystemVersion.Length != 0) hash ^= SystemVersion.GetHashCode();
      if (DeviceName.Length != 0) hash ^= DeviceName.GetHashCode();
      if (DeviceUuid.Length != 0) hash ^= DeviceUuid.GetHashCode();
      if (TargetUid != 0) hash ^= TargetUid.GetHashCode();
      if (LoginRand != 0UL) hash ^= LoginRand.GetHashCode();
      if (IsEditor != false) hash ^= IsEditor.GetHashCode();
      if (LanguageType != 0) hash ^= LanguageType.GetHashCode();
      if (AccountType != 0) hash ^= AccountType.GetHashCode();
      if (AccountUid.Length != 0) hash ^= AccountUid.GetHashCode();
      if (Platform.Length != 0) hash ^= Platform.GetHashCode();
      if (DeviceInfo.Length != 0) hash ^= DeviceInfo.GetHashCode();
      if (PlatformType != 0) hash ^= PlatformType.GetHashCode();
      if (IsGuest != false) hash ^= IsGuest.GetHashCode();
      if (CloudClientIp != 0) hash ^= CloudClientIp.GetHashCode();
      if (GmUid != 0) hash ^= GmUid.GetHashCode();
      if (Checksum.Length != 0) hash ^= Checksum.GetHashCode();
      if (OnlineId.Length != 0) hash ^= OnlineId.GetHashCode();
      if (ClientToken != 0) hash ^= ClientToken.GetHashCode();
      if (SecurityCmdReply.Length != 0) hash ^= SecurityCmdReply.GetHashCode();
      if (ExtraBinData.Length != 0) hash ^= ExtraBinData.GetHashCode();
      if (Cps.Length != 0) hash ^= Cps.GetHashCode();
      if (ChannelId != 0) hash ^= ChannelId.GetHashCode();
      if (SubChannelId != 0) hash ^= SubChannelId.GetHashCode();
      if (ChecksumClientVersion.Length != 0) hash ^= ChecksumClientVersion.GetHashCode();
      if (Tag != 0) hash ^= Tag.GetHashCode();
      if (trackingIoInfo_ != null) hash ^= TrackingIoInfo.GetHashCode();
      if (CountryCode.Length != 0) hash ^= CountryCode.GetHashCode();
      if (ClientDataVersion != 0) hash ^= ClientDataVersion.GetHashCode();
      if (EnvironmentErrorCode.Length != 0) hash ^= EnvironmentErrorCode.GetHashCode();
      if (TargetHomeOwnerUid != 0) hash ^= TargetHomeOwnerUid.GetHashCode();
      if (PsnId.Length != 0) hash ^= PsnId.GetHashCode();
      if (ClientVerisonHash.Length != 0) hash ^= ClientVerisonHash.GetHashCode();
      if (IsTransfer != false) hash ^= IsTransfer.GetHashCode();
      if (RegPlatform != 0) hash ^= RegPlatform.GetHashCode();
      if (TargetHomeParam != 0) hash ^= TargetHomeParam.GetHashCode();
      if (adjustTrackingInfo_ != null) hash ^= AdjustTrackingInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (ClientVersion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientVersion);
      }
      if (SystemVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SystemVersion);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DeviceName);
      }
      if (DeviceUuid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DeviceUuid);
      }
      if (TargetUid != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TargetUid);
      }
      if (LoginRand != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(LoginRand);
      }
      if (IsEditor != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsEditor);
      }
      if (LanguageType != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(LanguageType);
      }
      if (AccountType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(AccountType);
      }
      if (AccountUid.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(AccountUid);
      }
      if (Platform.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Platform);
      }
      if (DeviceInfo.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(DeviceInfo);
      }
      if (PlatformType != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(PlatformType);
      }
      if (IsGuest != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsGuest);
      }
      if (CloudClientIp != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(CloudClientIp);
      }
      if (GmUid != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(GmUid);
      }
      if (Checksum.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Checksum);
      }
      if (OnlineId.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(OnlineId);
      }
      if (ClientToken != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ClientToken);
      }
      if (SecurityCmdReply.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteBytes(SecurityCmdReply);
      }
      if (ExtraBinData.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteBytes(ExtraBinData);
      }
      if (Cps.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(Cps);
      }
      if (ChannelId != 0) {
        output.WriteRawTag(192, 1);
        output.WriteUInt32(ChannelId);
      }
      if (SubChannelId != 0) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(SubChannelId);
      }
      if (ChecksumClientVersion.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(ChecksumClientVersion);
      }
      if (Tag != 0) {
        output.WriteRawTag(216, 1);
        output.WriteUInt32(Tag);
      }
      if (trackingIoInfo_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(TrackingIoInfo);
      }
      if (CountryCode.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(CountryCode);
      }
      if (ClientDataVersion != 0) {
        output.WriteRawTag(240, 1);
        output.WriteUInt32(ClientDataVersion);
      }
      if (EnvironmentErrorCode.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteBytes(EnvironmentErrorCode);
      }
      if (TargetHomeOwnerUid != 0) {
        output.WriteRawTag(128, 2);
        output.WriteUInt32(TargetHomeOwnerUid);
      }
      if (PsnId.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(PsnId);
      }
      if (ClientVerisonHash.Length != 0) {
        output.WriteRawTag(146, 2);
        output.WriteString(ClientVerisonHash);
      }
      if (IsTransfer != false) {
        output.WriteRawTag(152, 2);
        output.WriteBool(IsTransfer);
      }
      if (RegPlatform != 0) {
        output.WriteRawTag(160, 2);
        output.WriteUInt32(RegPlatform);
      }
      if (TargetHomeParam != 0) {
        output.WriteRawTag(168, 2);
        output.WriteUInt32(TargetHomeParam);
      }
      if (adjustTrackingInfo_ != null) {
        output.WriteRawTag(178, 2);
        output.WriteMessage(AdjustTrackingInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (ClientVersion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientVersion);
      }
      if (SystemVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SystemVersion);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DeviceName);
      }
      if (DeviceUuid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DeviceUuid);
      }
      if (TargetUid != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TargetUid);
      }
      if (LoginRand != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(LoginRand);
      }
      if (IsEditor != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsEditor);
      }
      if (LanguageType != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(LanguageType);
      }
      if (AccountType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(AccountType);
      }
      if (AccountUid.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(AccountUid);
      }
      if (Platform.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Platform);
      }
      if (DeviceInfo.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(DeviceInfo);
      }
      if (PlatformType != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(PlatformType);
      }
      if (IsGuest != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsGuest);
      }
      if (CloudClientIp != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(CloudClientIp);
      }
      if (GmUid != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(GmUid);
      }
      if (Checksum.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Checksum);
      }
      if (OnlineId.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(OnlineId);
      }
      if (ClientToken != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ClientToken);
      }
      if (SecurityCmdReply.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteBytes(SecurityCmdReply);
      }
      if (ExtraBinData.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteBytes(ExtraBinData);
      }
      if (Cps.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(Cps);
      }
      if (ChannelId != 0) {
        output.WriteRawTag(192, 1);
        output.WriteUInt32(ChannelId);
      }
      if (SubChannelId != 0) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(SubChannelId);
      }
      if (ChecksumClientVersion.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(ChecksumClientVersion);
      }
      if (Tag != 0) {
        output.WriteRawTag(216, 1);
        output.WriteUInt32(Tag);
      }
      if (trackingIoInfo_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(TrackingIoInfo);
      }
      if (CountryCode.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(CountryCode);
      }
      if (ClientDataVersion != 0) {
        output.WriteRawTag(240, 1);
        output.WriteUInt32(ClientDataVersion);
      }
      if (EnvironmentErrorCode.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteBytes(EnvironmentErrorCode);
      }
      if (TargetHomeOwnerUid != 0) {
        output.WriteRawTag(128, 2);
        output.WriteUInt32(TargetHomeOwnerUid);
      }
      if (PsnId.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(PsnId);
      }
      if (ClientVerisonHash.Length != 0) {
        output.WriteRawTag(146, 2);
        output.WriteString(ClientVerisonHash);
      }
      if (IsTransfer != false) {
        output.WriteRawTag(152, 2);
        output.WriteBool(IsTransfer);
      }
      if (RegPlatform != 0) {
        output.WriteRawTag(160, 2);
        output.WriteUInt32(RegPlatform);
      }
      if (TargetHomeParam != 0) {
        output.WriteRawTag(168, 2);
        output.WriteUInt32(TargetHomeParam);
      }
      if (adjustTrackingInfo_ != null) {
        output.WriteRawTag(178, 2);
        output.WriteMessage(AdjustTrackingInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (ClientVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientVersion);
      }
      if (SystemVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SystemVersion);
      }
      if (DeviceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
      }
      if (DeviceUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceUuid);
      }
      if (TargetUid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetUid);
      }
      if (LoginRand != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LoginRand);
      }
      if (IsEditor != false) {
        size += 1 + 1;
      }
      if (LanguageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LanguageType);
      }
      if (AccountType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountType);
      }
      if (AccountUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountUid);
      }
      if (Platform.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Platform);
      }
      if (DeviceInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceInfo);
      }
      if (PlatformType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlatformType);
      }
      if (IsGuest != false) {
        size += 1 + 1;
      }
      if (CloudClientIp != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CloudClientIp);
      }
      if (GmUid != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(GmUid);
      }
      if (Checksum.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Checksum);
      }
      if (OnlineId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OnlineId);
      }
      if (ClientToken != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ClientToken);
      }
      if (SecurityCmdReply.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(SecurityCmdReply);
      }
      if (ExtraBinData.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(ExtraBinData);
      }
      if (Cps.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Cps);
      }
      if (ChannelId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ChannelId);
      }
      if (SubChannelId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SubChannelId);
      }
      if (ChecksumClientVersion.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ChecksumClientVersion);
      }
      if (Tag != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Tag);
      }
      if (trackingIoInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TrackingIoInfo);
      }
      if (CountryCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
      }
      if (ClientDataVersion != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ClientDataVersion);
      }
      if (EnvironmentErrorCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(EnvironmentErrorCode);
      }
      if (TargetHomeOwnerUid != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TargetHomeOwnerUid);
      }
      if (PsnId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PsnId);
      }
      if (ClientVerisonHash.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientVerisonHash);
      }
      if (IsTransfer != false) {
        size += 2 + 1;
      }
      if (RegPlatform != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RegPlatform);
      }
      if (TargetHomeParam != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TargetHomeParam);
      }
      if (adjustTrackingInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AdjustTrackingInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerLoginReq other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.ClientVersion.Length != 0) {
        ClientVersion = other.ClientVersion;
      }
      if (other.SystemVersion.Length != 0) {
        SystemVersion = other.SystemVersion;
      }
      if (other.DeviceName.Length != 0) {
        DeviceName = other.DeviceName;
      }
      if (other.DeviceUuid.Length != 0) {
        DeviceUuid = other.DeviceUuid;
      }
      if (other.TargetUid != 0) {
        TargetUid = other.TargetUid;
      }
      if (other.LoginRand != 0UL) {
        LoginRand = other.LoginRand;
      }
      if (other.IsEditor != false) {
        IsEditor = other.IsEditor;
      }
      if (other.LanguageType != 0) {
        LanguageType = other.LanguageType;
      }
      if (other.AccountType != 0) {
        AccountType = other.AccountType;
      }
      if (other.AccountUid.Length != 0) {
        AccountUid = other.AccountUid;
      }
      if (other.Platform.Length != 0) {
        Platform = other.Platform;
      }
      if (other.DeviceInfo.Length != 0) {
        DeviceInfo = other.DeviceInfo;
      }
      if (other.PlatformType != 0) {
        PlatformType = other.PlatformType;
      }
      if (other.IsGuest != false) {
        IsGuest = other.IsGuest;
      }
      if (other.CloudClientIp != 0) {
        CloudClientIp = other.CloudClientIp;
      }
      if (other.GmUid != 0) {
        GmUid = other.GmUid;
      }
      if (other.Checksum.Length != 0) {
        Checksum = other.Checksum;
      }
      if (other.OnlineId.Length != 0) {
        OnlineId = other.OnlineId;
      }
      if (other.ClientToken != 0) {
        ClientToken = other.ClientToken;
      }
      if (other.SecurityCmdReply.Length != 0) {
        SecurityCmdReply = other.SecurityCmdReply;
      }
      if (other.ExtraBinData.Length != 0) {
        ExtraBinData = other.ExtraBinData;
      }
      if (other.Cps.Length != 0) {
        Cps = other.Cps;
      }
      if (other.ChannelId != 0) {
        ChannelId = other.ChannelId;
      }
      if (other.SubChannelId != 0) {
        SubChannelId = other.SubChannelId;
      }
      if (other.ChecksumClientVersion.Length != 0) {
        ChecksumClientVersion = other.ChecksumClientVersion;
      }
      if (other.Tag != 0) {
        Tag = other.Tag;
      }
      if (other.trackingIoInfo_ != null) {
        if (trackingIoInfo_ == null) {
          TrackingIoInfo = new global::Lemonade.Net.Protocol.TrackingIOInfo();
        }
        TrackingIoInfo.MergeFrom(other.TrackingIoInfo);
      }
      if (other.CountryCode.Length != 0) {
        CountryCode = other.CountryCode;
      }
      if (other.ClientDataVersion != 0) {
        ClientDataVersion = other.ClientDataVersion;
      }
      if (other.EnvironmentErrorCode.Length != 0) {
        EnvironmentErrorCode = other.EnvironmentErrorCode;
      }
      if (other.TargetHomeOwnerUid != 0) {
        TargetHomeOwnerUid = other.TargetHomeOwnerUid;
      }
      if (other.PsnId.Length != 0) {
        PsnId = other.PsnId;
      }
      if (other.ClientVerisonHash.Length != 0) {
        ClientVerisonHash = other.ClientVerisonHash;
      }
      if (other.IsTransfer != false) {
        IsTransfer = other.IsTransfer;
      }
      if (other.RegPlatform != 0) {
        RegPlatform = other.RegPlatform;
      }
      if (other.TargetHomeParam != 0) {
        TargetHomeParam = other.TargetHomeParam;
      }
      if (other.adjustTrackingInfo_ != null) {
        if (adjustTrackingInfo_ == null) {
          AdjustTrackingInfo = new global::Lemonade.Net.Protocol.AdjustTrackingInfo();
        }
        AdjustTrackingInfo.MergeFrom(other.AdjustTrackingInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            ClientVersion = input.ReadString();
            break;
          }
          case 26: {
            SystemVersion = input.ReadString();
            break;
          }
          case 34: {
            DeviceName = input.ReadString();
            break;
          }
          case 42: {
            DeviceUuid = input.ReadString();
            break;
          }
          case 48: {
            TargetUid = input.ReadUInt32();
            break;
          }
          case 56: {
            LoginRand = input.ReadUInt64();
            break;
          }
          case 64: {
            IsEditor = input.ReadBool();
            break;
          }
          case 72: {
            LanguageType = input.ReadUInt32();
            break;
          }
          case 80: {
            AccountType = input.ReadUInt32();
            break;
          }
          case 90: {
            AccountUid = input.ReadString();
            break;
          }
          case 98: {
            Platform = input.ReadString();
            break;
          }
          case 106: {
            DeviceInfo = input.ReadString();
            break;
          }
          case 112: {
            PlatformType = input.ReadUInt32();
            break;
          }
          case 120: {
            IsGuest = input.ReadBool();
            break;
          }
          case 128: {
            CloudClientIp = input.ReadUInt32();
            break;
          }
          case 136: {
            GmUid = input.ReadUInt32();
            break;
          }
          case 146: {
            Checksum = input.ReadString();
            break;
          }
          case 154: {
            OnlineId = input.ReadString();
            break;
          }
          case 160: {
            ClientToken = input.ReadUInt32();
            break;
          }
          case 170: {
            SecurityCmdReply = input.ReadBytes();
            break;
          }
          case 178: {
            ExtraBinData = input.ReadBytes();
            break;
          }
          case 186: {
            Cps = input.ReadString();
            break;
          }
          case 192: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 200: {
            SubChannelId = input.ReadUInt32();
            break;
          }
          case 210: {
            ChecksumClientVersion = input.ReadString();
            break;
          }
          case 216: {
            Tag = input.ReadUInt32();
            break;
          }
          case 226: {
            if (trackingIoInfo_ == null) {
              TrackingIoInfo = new global::Lemonade.Net.Protocol.TrackingIOInfo();
            }
            input.ReadMessage(TrackingIoInfo);
            break;
          }
          case 234: {
            CountryCode = input.ReadString();
            break;
          }
          case 240: {
            ClientDataVersion = input.ReadUInt32();
            break;
          }
          case 250: {
            EnvironmentErrorCode = input.ReadBytes();
            break;
          }
          case 256: {
            TargetHomeOwnerUid = input.ReadUInt32();
            break;
          }
          case 266: {
            PsnId = input.ReadString();
            break;
          }
          case 274: {
            ClientVerisonHash = input.ReadString();
            break;
          }
          case 280: {
            IsTransfer = input.ReadBool();
            break;
          }
          case 288: {
            RegPlatform = input.ReadUInt32();
            break;
          }
          case 296: {
            TargetHomeParam = input.ReadUInt32();
            break;
          }
          case 306: {
            if (adjustTrackingInfo_ == null) {
              AdjustTrackingInfo = new global::Lemonade.Net.Protocol.AdjustTrackingInfo();
            }
            input.ReadMessage(AdjustTrackingInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            ClientVersion = input.ReadString();
            break;
          }
          case 26: {
            SystemVersion = input.ReadString();
            break;
          }
          case 34: {
            DeviceName = input.ReadString();
            break;
          }
          case 42: {
            DeviceUuid = input.ReadString();
            break;
          }
          case 48: {
            TargetUid = input.ReadUInt32();
            break;
          }
          case 56: {
            LoginRand = input.ReadUInt64();
            break;
          }
          case 64: {
            IsEditor = input.ReadBool();
            break;
          }
          case 72: {
            LanguageType = input.ReadUInt32();
            break;
          }
          case 80: {
            AccountType = input.ReadUInt32();
            break;
          }
          case 90: {
            AccountUid = input.ReadString();
            break;
          }
          case 98: {
            Platform = input.ReadString();
            break;
          }
          case 106: {
            DeviceInfo = input.ReadString();
            break;
          }
          case 112: {
            PlatformType = input.ReadUInt32();
            break;
          }
          case 120: {
            IsGuest = input.ReadBool();
            break;
          }
          case 128: {
            CloudClientIp = input.ReadUInt32();
            break;
          }
          case 136: {
            GmUid = input.ReadUInt32();
            break;
          }
          case 146: {
            Checksum = input.ReadString();
            break;
          }
          case 154: {
            OnlineId = input.ReadString();
            break;
          }
          case 160: {
            ClientToken = input.ReadUInt32();
            break;
          }
          case 170: {
            SecurityCmdReply = input.ReadBytes();
            break;
          }
          case 178: {
            ExtraBinData = input.ReadBytes();
            break;
          }
          case 186: {
            Cps = input.ReadString();
            break;
          }
          case 192: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 200: {
            SubChannelId = input.ReadUInt32();
            break;
          }
          case 210: {
            ChecksumClientVersion = input.ReadString();
            break;
          }
          case 216: {
            Tag = input.ReadUInt32();
            break;
          }
          case 226: {
            if (trackingIoInfo_ == null) {
              TrackingIoInfo = new global::Lemonade.Net.Protocol.TrackingIOInfo();
            }
            input.ReadMessage(TrackingIoInfo);
            break;
          }
          case 234: {
            CountryCode = input.ReadString();
            break;
          }
          case 240: {
            ClientDataVersion = input.ReadUInt32();
            break;
          }
          case 250: {
            EnvironmentErrorCode = input.ReadBytes();
            break;
          }
          case 256: {
            TargetHomeOwnerUid = input.ReadUInt32();
            break;
          }
          case 266: {
            PsnId = input.ReadString();
            break;
          }
          case 274: {
            ClientVerisonHash = input.ReadString();
            break;
          }
          case 280: {
            IsTransfer = input.ReadBool();
            break;
          }
          case 288: {
            RegPlatform = input.ReadUInt32();
            break;
          }
          case 296: {
            TargetHomeParam = input.ReadUInt32();
            break;
          }
          case 306: {
            if (adjustTrackingInfo_ == null) {
              AdjustTrackingInfo = new global::Lemonade.Net.Protocol.AdjustTrackingInfo();
            }
            input.ReadMessage(AdjustTrackingInfo);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PlayerLoginReq message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum CmdId {
        [pbr::OriginalName("ENET_CHANNEL_ID")] EnetChannelId = 0,
        [pbr::OriginalName("NONE", PreferredAlias = false)] None = 0,
        [pbr::OriginalName("ENET_IS_RELIABLE")] EnetIsReliable = 1,
        [pbr::OriginalName("IS_ALLOW_CLIENT", PreferredAlias = false)] IsAllowClient = 1,
        [pbr::OriginalName("CMD_ID")] CmdId = 189,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
