// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ResinChangeNotify.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Lemonade.Net.Protocol {

  /// <summary>Holder for reflection information generated from ResinChangeNotify.proto</summary>
  public static partial class ResinChangeNotifyReflection {

    #region Descriptor
    /// <summary>File descriptor for ResinChangeNotify.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ResinChangeNotifyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdSZXNpbkNoYW5nZU5vdGlmeS5wcm90byKoAQoRUmVzaW5DaGFuZ2VOb3Rp",
            "ZnkSEQoJY3VyX3ZhbHVlGAEgASgNEhoKEm5leHRfYWRkX3RpbWVzdGFtcBgC",
            "IAEoDRIVCg1jdXJfYnV5X2NvdW50GAMgASgNIk0KBUNtZElkEggKBE5PTkUQ",
            "ABITCg9FTkVUX0NIQU5ORUxfSUQQABIUChBFTkVUX0lTX1JFTElBQkxFEAES",
            "CwoGQ01EX0lEEOMEGgIQAUIYqgIVTGVtb25hZGUuTmV0LlByb3RvY29sYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Lemonade.Net.Protocol.ResinChangeNotify), global::Lemonade.Net.Protocol.ResinChangeNotify.Parser, new[]{ "CurValue", "NextAddTimestamp", "CurBuyCount" }, null, new[]{ typeof(global::Lemonade.Net.Protocol.ResinChangeNotify.Types.CmdId) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ResinChangeNotify : pb::IMessage<ResinChangeNotify>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResinChangeNotify> _parser = new pb::MessageParser<ResinChangeNotify>(() => new ResinChangeNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ResinChangeNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Lemonade.Net.Protocol.ResinChangeNotifyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResinChangeNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResinChangeNotify(ResinChangeNotify other) : this() {
      curValue_ = other.curValue_;
      nextAddTimestamp_ = other.nextAddTimestamp_;
      curBuyCount_ = other.curBuyCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResinChangeNotify Clone() {
      return new ResinChangeNotify(this);
    }

    /// <summary>Field number for the "cur_value" field.</summary>
    public const int CurValueFieldNumber = 1;
    private uint curValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CurValue {
      get { return curValue_; }
      set {
        curValue_ = value;
      }
    }

    /// <summary>Field number for the "next_add_timestamp" field.</summary>
    public const int NextAddTimestampFieldNumber = 2;
    private uint nextAddTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NextAddTimestamp {
      get { return nextAddTimestamp_; }
      set {
        nextAddTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "cur_buy_count" field.</summary>
    public const int CurBuyCountFieldNumber = 3;
    private uint curBuyCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CurBuyCount {
      get { return curBuyCount_; }
      set {
        curBuyCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ResinChangeNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ResinChangeNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurValue != other.CurValue) return false;
      if (NextAddTimestamp != other.NextAddTimestamp) return false;
      if (CurBuyCount != other.CurBuyCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CurValue != 0) hash ^= CurValue.GetHashCode();
      if (NextAddTimestamp != 0) hash ^= NextAddTimestamp.GetHashCode();
      if (CurBuyCount != 0) hash ^= CurBuyCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CurValue != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(CurValue);
      }
      if (NextAddTimestamp != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(NextAddTimestamp);
      }
      if (CurBuyCount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(CurBuyCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CurValue != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(CurValue);
      }
      if (NextAddTimestamp != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(NextAddTimestamp);
      }
      if (CurBuyCount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(CurBuyCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CurValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurValue);
      }
      if (NextAddTimestamp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NextAddTimestamp);
      }
      if (CurBuyCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurBuyCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ResinChangeNotify other) {
      if (other == null) {
        return;
      }
      if (other.CurValue != 0) {
        CurValue = other.CurValue;
      }
      if (other.NextAddTimestamp != 0) {
        NextAddTimestamp = other.NextAddTimestamp;
      }
      if (other.CurBuyCount != 0) {
        CurBuyCount = other.CurBuyCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurValue = input.ReadUInt32();
            break;
          }
          case 16: {
            NextAddTimestamp = input.ReadUInt32();
            break;
          }
          case 24: {
            CurBuyCount = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CurValue = input.ReadUInt32();
            break;
          }
          case 16: {
            NextAddTimestamp = input.ReadUInt32();
            break;
          }
          case 24: {
            CurBuyCount = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ResinChangeNotify message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum CmdId {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("ENET_CHANNEL_ID", PreferredAlias = false)] EnetChannelId = 0,
        [pbr::OriginalName("ENET_IS_RELIABLE")] EnetIsReliable = 1,
        [pbr::OriginalName("CMD_ID")] CmdId = 611,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
